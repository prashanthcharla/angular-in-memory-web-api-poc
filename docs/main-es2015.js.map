{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common/Constants.ts","./src/app/common/HttpHeaders.ts","./src/app/common/helpers/college.data.ts","./src/app/common/helpers/lecturer.data.ts","./src/app/common/helpers/stream.data.ts","./src/app/common/helpers/student.data.ts","./src/app/components/college-database/college-database.component.ts","./src/app/components/college-database/college-database.component.html","./src/app/components/college-database/create-update-dailog-box/create-update-dailog-box.component.ts","./src/app/components/college-database/create-update-dailog-box/create-update-dailog-box.component.html","./src/app/components/college-database/delete-prompt-dailog/delete-prompt-dailog.component.ts","./src/app/components/college-database/delete-prompt-dailog/delete-prompt-dailog.component.html","./src/app/components/college-database/lecturers-data-table/create-update-dailog-box/create-update-dailog-box.component.ts","./src/app/components/college-database/lecturers-data-table/create-update-dailog-box/create-update-dailog-box.component.html","./src/app/components/college-database/lecturers-data-table/lecturers-data-table.component.ts","./src/app/components/college-database/lecturers-data-table/lecturers-data-table.component.html","./src/app/components/college-database/students-data-table/create-update-dailog-box/create-update-dailog-box.component.ts","./src/app/components/college-database/students-data-table/create-update-dailog-box/create-update-dailog-box.component.html","./src/app/components/college-database/students-data-table/students-data-table.component.ts","./src/app/components/college-database/students-data-table/students-data-table.component.html","./src/app/interceptors/TestInterceptor.ts","./src/app/services/data/in-memory-data.service.ts","./src/app/services/functional/college.service.ts","./src/app/services/functional/lecturer.service.ts","./src/app/services/functional/stream.service.ts","./src/app/services/functional/student.service.ts","./src/app/services/ui-common.service.ts","./src/environments/environment.prod.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Stream } from './models/stream';\r\nimport { CollegeService } from './services/functional/college.service';\r\nimport { LecturerService } from './services/functional/lecturer.service';\r\nimport { StreamService } from './services/functional/stream.service';\r\nimport { StudentService } from './services/functional/student.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'college-demo';\r\n  stream: Stream;\r\n\r\n  constructor(private streamService: StreamService,\r\n    private lecturerServive: LecturerService,\r\n    private studentService: StudentService,\r\n    private collegeService: CollegeService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.streamService.getAllStreamsDetails();\r\n    this.lecturerServive.getAllLecturerDetails();\r\n    this.studentService.getAllStudentsDetails();\r\n    this.collegeService.getAllCollegesDetails();\r\n  }\r\n}\r\n","<app-college-database></app-college-database>","import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CollegeDatabaseComponent } from './components/college-database/college-database.component';\r\nimport { LecturersDataTableComponent } from './components/college-database/lecturers-data-table/lecturers-data-table.component';\r\nimport { StudentCreateUpdateDailogBoxComponent } from './components/college-database/students-data-table/create-update-dailog-box/create-update-dailog-box.component';\r\nimport { LecturerCreateUpdateDailogBoxComponent } from './components/college-database/lecturers-data-table/create-update-dailog-box/create-update-dailog-box.component';\r\nimport { StudentsDataTableComponent } from './components/college-database/students-data-table/students-data-table.component';\r\nimport { InMemoryDataService } from './services/data/in-memory-data.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { DeletePromptDailogComponent } from './components/college-database/delete-prompt-dailog/delete-prompt-dailog.component';\r\nimport { CollegeCreateUpdateDailogBoxComponent } from './components/college-database/create-update-dailog-box/create-update-dailog-box.component';\r\nimport { MyInterceptor } from './interceptors/TestInterceptor';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CollegeDatabaseComponent,\r\n    LecturersDataTableComponent,\r\n    StudentsDataTableComponent,\r\n    StudentCreateUpdateDailogBoxComponent,\r\n    LecturerCreateUpdateDailogBoxComponent,\r\n    DeletePromptDailogComponent,\r\n    CollegeCreateUpdateDailogBoxComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    environment.production ?\r\n      HttpClientInMemoryWebApiModule.forRoot(InMemoryDataService, { dataEncapsulation: false, delay: 3000 }) :\r\n      null,\r\n    MatCardModule,\r\n    MatExpansionModule,\r\n    MatTabsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: MyInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export const COLLEGE_LOADING_MESSAGE: string = \"Getting collges data. Please wait...\";\r\n\r\nexport const ERROR_MESSAGE: string = \"Looks like there is some issue. Please try again.\";\r\n\r\nexport const STUDENT_CREATE_FORM_HEADER: string = \"Student Registration\";\r\n\r\nexport const STUDENT_UPDATE_FORM_HEADER: string = \"Update Student Details\";\r\n\r\nexport const LECTURER_CREATE_FORM_HEADER: string = \"Lecturer Registration\";\r\n\r\nexport const LECTURER_UPDATE_FORM_HEADER: string = \"Update Lecturer Details\";\r\n\r\nexport const SAVE_BTN_LABEL: string = \"Save\";\r\n\r\nexport const UPDATE_BTN_LABEL: string = \"Update\";","export const FrequentHttpHeaders = {\r\n        'Content-Type': \"application/json\",\r\n        'Accept': \"application/json\"\r\n};","import { College } from \"src/app/models/college\";\r\n\r\nexport const COLLEGE_DATA: Array<College> = [\r\n    {\r\n        id: 1,\r\n        location: \"Warangal, Telangana\",\r\n        name: \"Kakatiya Institute of Technology & Science\",\r\n        principalId: 0\r\n    },\r\n    {\r\n        id: 2,\r\n        location: \"Banglore, Karnataka\",\r\n        name: \"Indian Institute of Management\",\r\n        principalId: 0\r\n    },\r\n];","import { Lecturer } from \"src/app/models/lecturer\";\r\n\r\nexport const LECTURER_DATA: Array<Lecturer> = [\r\n    {\r\n        id: 1,\r\n        streamId: 1,\r\n        firstName: \"Pavan Kumar\",\r\n        lastName: \"Erraboina\",\r\n        collegeId: 1\r\n    },\r\n    {\r\n        id: 2,\r\n        streamId: 2,\r\n        firstName: \"Akhilesh\",\r\n        lastName: \"Yadav\",\r\n        collegeId: 1\r\n    },\r\n    {\r\n        id: 3,\r\n        streamId: 3,\r\n        firstName: \"Satish\",\r\n        lastName: \"Reddy\",\r\n        collegeId: 1\r\n    },\r\n    {\r\n        id: 4,\r\n        streamId: 4,\r\n        firstName: \"Ashok\",\r\n        lastName: \"Reddy\",\r\n        collegeId: 1\r\n    },\r\n    {\r\n        id: 5,\r\n        streamId: 5,\r\n        firstName: \"Madhu Priya\",\r\n        lastName: \"Putti\",\r\n        collegeId: 1\r\n    },\r\n    {\r\n        id: 6,\r\n        streamId: 6,\r\n        firstName: \"Sowjanya\",\r\n        lastName: \"Reddy\",\r\n        collegeId: 1\r\n    },\r\n];","import { Stream } from \"src/app/models/stream\";\r\n\r\nexport const STREAM_DATA: Array<Stream> = [\r\n    {\r\n        id: 1,\r\n        name: \"Electronics & Communications\",\r\n        noOfYears: 4\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Computer Science\",\r\n        noOfYears: 4\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Information Technology\",\r\n        noOfYears: 4\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Mechanical\",\r\n        noOfYears: 4\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Electronics & Electrical\",\r\n        noOfYears: 4\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Civil Engineering\",\r\n        noOfYears: 4\r\n    },\r\n];","import { Student } from \"src/app/models/student\";\r\n\r\nexport const STUDENT_DATA: Array<Student> = [\r\n    {\r\n        id: 1,\r\n        collegeId: 1,\r\n        firstName: \"Prashanth\",\r\n        lastName: \"Charla\",\r\n        streamId: 1,\r\n        currStreamYear: 2\r\n    },\r\n    {\r\n        id: 2,\r\n        collegeId: 1,\r\n        firstName: \"Vikas\",\r\n        lastName: \"Krishnamurthy\",\r\n        streamId: 2,\r\n        currStreamYear: 4\r\n    },\r\n    {\r\n        id: 3,\r\n        collegeId: 1,\r\n        firstName: \"Raj\",\r\n        lastName: \"Kumar\",\r\n        streamId: 4,\r\n        currStreamYear: 2\r\n    },\r\n    {\r\n        id: 4,\r\n        collegeId: 1,\r\n        firstName: \"Sajan\",\r\n        lastName: \"Kumar\",\r\n        streamId: 2,\r\n        currStreamYear: 4\r\n    },\r\n    {\r\n        id: 5,\r\n        collegeId: 1,\r\n        firstName: \"Yashwanth\",\r\n        lastName: \"Paindla\",\r\n        streamId: 1,\r\n        currStreamYear: 3\r\n    },\r\n    {\r\n        id: 6,\r\n        collegeId: 1,\r\n        firstName: \"Vishal\",\r\n        lastName: \"Palle\",\r\n        streamId: 3,\r\n        currStreamYear: 1\r\n    },\r\n    {\r\n        id: 7,\r\n        collegeId: 1,\r\n        firstName: \"Sai Krishna\",\r\n        lastName: \"Mudigonda\",\r\n        streamId: 1,\r\n        currStreamYear: 2\r\n    },\r\n    {\r\n        id: 8,\r\n        collegeId: 1,\r\n        firstName: \"Nikhil\",\r\n        lastName: \"Reddy\",\r\n        streamId: 3,\r\n        currStreamYear: 3\r\n    },\r\n    {\r\n        id: 9,\r\n        collegeId: 1,\r\n        firstName: \"Sharath\",\r\n        lastName: \"Reddy\",\r\n        streamId: 3,\r\n        currStreamYear: 1\r\n    },\r\n    {\r\n        id: 10,\r\n        collegeId: 1,\r\n        firstName: \"Girish\",\r\n        lastName: \"Golla\",\r\n        streamId: 6,\r\n        currStreamYear: 4\r\n    },\r\n];","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { College } from 'src/app/models/college';\r\nimport { CollegeService } from 'src/app/services/functional/college.service';\r\nimport { UiCommonService } from 'src/app/services/ui-common.service';\r\nimport { CollegeCreateUpdateDailogBoxComponent } from './create-update-dailog-box/create-update-dailog-box.component';\r\n\r\n@Component({\r\n  selector: 'app-college-database',\r\n  templateUrl: './college-database.component.html',\r\n  styleUrls: ['./college-database.component.scss']\r\n})\r\nexport class CollegeDatabaseComponent implements OnInit {\r\n\r\n  title: string;\r\n  subtitle: string;\r\n\r\n  collegesList: Array<College>;\r\n\r\n  studentDisplayColumns: string[];\r\n  lecturerDispalyColumns: string[];\r\n\r\n  subscriptions: Subscription;\r\n\r\n  activePanel: number;\r\n\r\n  loadingMessage$: Observable<string>;\r\n\r\n  constructor(private collegeService: CollegeService,\r\n    private uiCommonService: UiCommonService,\r\n    public dialog: MatDialog) {\r\n    this.title = \"Welcome to the College Database\";\r\n    this.subtitle = \"Explore & Manage\";\r\n\r\n    this.subscriptions = new Subscription();\r\n    this.activePanel = -1;\r\n\r\n    this.collegesList = new Array<College>();\r\n\r\n    this.studentDisplayColumns = [\"Id\", \"firstName\", \"lastName\", \"stream\", \"maxYearsInStream\", \"currentYear\", \"actions\"];\r\n    this.lecturerDispalyColumns = [\"Id\", \"firstName\", \"lastName\", \"stream\", \"actions\"];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadingMessage$ = this.uiCommonService.loadingMessage$;\r\n    this.collegeService.latestFilteredCollegesData$.subscribe(colleges => this.collegesList = colleges);\r\n  }\r\n\r\n  panelOpen(id: number, index: number) {\r\n    this.activePanel = index;\r\n    this.collegeService.latestOpenedPanelId.next(id);\r\n  }\r\n\r\n  panelClose(id: number, index: number) {\r\n    this.collegeService.latestClosedPanelId.next(id);\r\n  }\r\n\r\n  isExpansionPanelExpanded(index: number) {\r\n    return this.activePanel == index;\r\n  }\r\n\r\n  onCreateClick() {\r\n    this.openCreateOrUpdateDialog(\"save\");\r\n  }\r\n\r\n  onUpdateClick() {\r\n    this.openCreateOrUpdateDialog(\"update\");\r\n  }\r\n\r\n  private openCreateOrUpdateDialog(action: string) {\r\n    const dialogRef = this.dialog.open(CollegeCreateUpdateDailogBoxComponent, {\r\n      data: { action: action },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n}\r\n","<div>\r\n    <mat-card>\r\n        <mat-card-header>\r\n            <mat-card-title>{{ title }}</mat-card-title>\r\n            <mat-card-subtitle>{{ subtitle }}</mat-card-subtitle>\r\n            <span class=\"loadingMessage\">{{ loadingMessage$ | async }}</span>\r\n        </mat-card-header>\r\n        <mat-card-content *ngIf = \"(loadingMessage$ | async).length == 0\">\r\n            <div class=\"btns-grp\">\r\n                <button mat-raised-button class=\"btn\" (click)=\"onCreateClick()\">Add College</button>\r\n                <button mat-raised-button class=\"btn\" (click)=\"onUpdateClick()\">Update College</button>\r\n                <!-- <button mat-raised-button class=\"btn\">Delete College</button> -->\r\n            </div>\r\n            <mat-accordion multi>\r\n                <mat-expansion-panel *ngFor = \"let college of collegesList; index as i\" (opened)=\"panelOpen(college.id, i)\" (closed)=\"panelClose(college.id, i)\" [expanded] = \"isExpansionPanelExpanded(i)\">\r\n                    <mat-expansion-panel-header>\r\n                        <mat-panel-title>\r\n                            <span class=\"college\">{{ college.name }}</span>\r\n                            <span class=\"location\">{{ college.location }}</span>\r\n                        </mat-panel-title>\r\n                    </mat-expansion-panel-header>\r\n                    <mat-tab-group>\r\n                        <mat-tab label=\"Students\"> \r\n                            <app-students-data-table [displayedColumns]=\"studentDisplayColumns\"></app-students-data-table>     \r\n                        </mat-tab>\r\n                        <mat-tab label=\"Lecturers\"> \r\n                            <app-lecturers-data-table [displayedColumns]=\"lecturerDispalyColumns\"></app-lecturers-data-table>    \r\n                        </mat-tab>\r\n                    </mat-tab-group>\r\n                </mat-expansion-panel>\r\n            </mat-accordion>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>","import { Component, Inject, OnInit, Optional } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { BehaviorSubject, Observable, Subject, Subscription } from 'rxjs';\r\nimport { SAVE_BTN_LABEL, UPDATE_BTN_LABEL } from 'src/app/common/Constants';\r\nimport { Lecturer } from 'src/app/models/lecturer';\r\nimport { College } from 'src/app/models/college';\r\nimport { CollegeService } from 'src/app/services/functional/college.service';\r\nimport { UiCommonService } from 'src/app/services/ui-common.service';\r\nimport { LecturerService } from 'src/app/services/functional/lecturer.service';\r\n\r\n@Component({\r\n  selector: 'app-create-update-dailog-box',\r\n  templateUrl: './create-update-dailog-box.component.html',\r\n  styleUrls: ['./create-update-dailog-box.component.scss']\r\n})\r\nexport class CollegeCreateUpdateDailogBoxComponent implements OnInit {\r\n\r\n  collegeForm: FormGroup;\r\n  lecturerDropdownValues: Lecturer[];\r\n  collegeDropdownValues: College[];\r\n  subscriptions: Subscription;\r\n  disableSave$: Observable<boolean>;\r\n  action: string;\r\n  title: string;\r\n  submitBtnLabel: string;\r\n  selectedCollege: College;\r\n  private disableFieldsExceptCollege: Subject<boolean>;\r\n  disableFieldsExceptCollege$: Observable<boolean>;\r\n\r\n  constructor(private collegeService: CollegeService,\r\n    private lecturerService: LecturerService,\r\n    private formBuilder: FormBuilder,\r\n    private uiCommonService: UiCommonService,\r\n    public dialogRef: MatDialogRef<CollegeCreateUpdateDailogBoxComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: { action: string }) {\r\n    this.subscriptions = new Subscription();\r\n\r\n    this.collegeForm = this.formBuilder.group({\r\n      collegeId: [],\r\n      name: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      state: ['', Validators.required],\r\n      principalId: []\r\n    });\r\n\r\n    this.disableFieldsExceptCollege = new Subject<boolean>();\r\n    this.disableFieldsExceptCollege$ = this.disableFieldsExceptCollege.asObservable();\r\n\r\n    this.subscriptions.add(\r\n      this.disableFieldsExceptCollege$.subscribe(disable => {\r\n        if(disable) {\r\n          this.collegeForm.get('name').disable();\r\n          this.collegeForm.get('city').disable();\r\n          this.collegeForm.get('state').disable();\r\n          this.collegeForm.get('principalId').disable();\r\n        } else {\r\n          this.collegeForm.get('name').enable();\r\n          this.collegeForm.get('city').enable();\r\n          this.collegeForm.get('state').enable();\r\n          this.collegeForm.get('principalId').enable();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.dialogRef.updateSize(\"27%\");\r\n    this.action = this.data.action.toLowerCase();\r\n    if (this.action === \"save\") {\r\n      this.title = \"Add College\";\r\n      this.submitBtnLabel = SAVE_BTN_LABEL;\r\n      this.disableFieldsExceptCollege.next(false);\r\n    } else if (this.action === \"update\") {\r\n      this.title = \"Update College\";\r\n      this.submitBtnLabel = UPDATE_BTN_LABEL;\r\n      this.disableFieldsExceptCollege.next(true);\r\n    }\r\n\r\n    this.disableSave$ = this.collegeService.isCollegeFormSubmitDisabled.asObservable();\r\n\r\n    this.subscriptions.add(\r\n      this.collegeService.collegesData$.subscribe(data => this.collegeDropdownValues = data)\r\n    );\r\n  }\r\n\r\n  updateOtherFieldValues() {\r\n    this.disableFieldsExceptCollege.next(false);\r\n    this.selectedCollege = this.collegeDropdownValues.find(college => college.id == this.collegeForm.get('collegeId').value);\r\n    this.collegeForm.get('name').setValue(this.selectedCollege.name);\r\n    this.collegeForm.get('city').setValue(this.selectedCollege.location.split(',')[0]);\r\n    this.collegeForm.get('state').setValue(this.selectedCollege.location.split(',')[1]);\r\n    this.subscriptions.add(\r\n      this.lecturerService.lecturersData$.subscribe(data => this.lecturerDropdownValues = data.filter(lecturer => lecturer.collegeId == this.selectedCollege.id))\r\n    );\r\n    this.collegeForm.get('principalId').setValue(this.selectedCollege.principalId);\r\n  }\r\n\r\n  onSubmit() {\r\n    let college = {\r\n      location: this.collegeForm.get('city').value + ',' + this.collegeForm.get('state').value,\r\n      name: this.collegeForm.get('name').value,\r\n      principalId: this.collegeForm.get('principalId')?.value\r\n    } as College;\r\n\r\n    if (this.data.action.toLowerCase() === \"save\") this.collegeService.addCollege(college);\r\n    else if (this.data.action.toLowerCase() === \"update\") {\r\n      college.id = this.selectedCollege.id;\r\n      this.collegeService.updateCollegeDetails(this.selectedCollege.id, college);\r\n    }\r\n    this.dialogRef.close();\r\n    this.uiCommonService.load.next(true);\r\n  }\r\n\r\n}\r\n","<div>\r\n    <h2 mat-dialog-title>{{ title }}</h2>\r\n    <div class=\"content\">\r\n        <form [formGroup]=\"collegeForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n            <div *ngIf=\"action === 'update'\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>College</mat-label>\r\n                    <mat-select formControlName=\"collegeId\" (selectionChange)=\"updateOtherFieldValues()\">\r\n                        <mat-option *ngFor=\"let college of collegeDropdownValues\" [value]=\"college.id\">\r\n                            {{ college.name }}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div>\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Name</mat-label>\r\n                    <input matInput formControlName=\"name\" required>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>City / District</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"city\" required>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div>\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>State</mat-label>\r\n                    <input matInput formControlName=\"state\" required>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div *ngIf=\"action === 'update'\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Principal</mat-label>\r\n                    <mat-select formControlName=\"principalId\">\r\n                        <mat-option *ngFor=\"let lecturer of lecturerDropdownValues\" [value]=\"lecturer.id\">\r\n                            {{lecturer.firstName + ' ' + lecturer.lastName}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div mat-dialog-actions align=\"center\">\r\n                <button type=\"button\" mat-raised-button mat-dialog-close>Cancel</button>\r\n                <button type=\"submit\" mat-raised-button [disabled]=\"(disableSave$ | async) || !collegeForm.valid\">{{ submitBtnLabel }}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit, Optional } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-prompt-dailog',\r\n  templateUrl: './delete-prompt-dailog.component.html',\r\n  styleUrls: ['./delete-prompt-dailog.component.scss']\r\n})\r\nexport class DeletePromptDailogComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<DeletePromptDailogComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: { caller: string }) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onAction(event: string) {\r\n    this.dialogRef.close({ event: event });\r\n  }\r\n\r\n}\r\n","<div>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <h3>Are you sure?</h3>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n        <button mat-button mat-dialog-close (click)=\"onAction('No')\">No</button>\r\n        <button mat-button (click)=\"onAction('Yes')\">Yes</button>\r\n    </mat-dialog-actions>\r\n</div>","import { Component, Inject, OnInit, Optional } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { LECTURER_CREATE_FORM_HEADER, LECTURER_UPDATE_FORM_HEADER, SAVE_BTN_LABEL, UPDATE_BTN_LABEL } from 'src/app/common/Constants';\r\nimport { Lecturer } from 'src/app/models/lecturer';\r\nimport { Stream } from 'src/app/models/stream';\r\nimport { CollegeService } from 'src/app/services/functional/college.service';\r\nimport { LecturerService } from 'src/app/services/functional/lecturer.service';\r\nimport { StreamService } from 'src/app/services/functional/stream.service';\r\nimport { UiCommonService } from 'src/app/services/ui-common.service';\r\n\r\n@Component({\r\n  selector: 'app-lecturer-create-update-dailog-box',\r\n  templateUrl: './create-update-dailog-box.component.html',\r\n  styleUrls: ['./create-update-dailog-box.component.scss']\r\n})\r\nexport class LecturerCreateUpdateDailogBoxComponent implements OnInit {\r\n\r\n  lecturerForm: FormGroup;\r\n  streamDropdownValues: Stream[];\r\n  subscriptions: Subscription;\r\n  disableSave$: Observable<boolean>;\r\n  action: string;\r\n  title: string;\r\n  submitBtnLabel: string;\r\n\r\n  constructor(private lecturerService: LecturerService,\r\n    private streamService: StreamService,\r\n    private collegeService: CollegeService,\r\n    private formBuilder: FormBuilder,\r\n    private uiCommonService: UiCommonService,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: { action: string, lecturer: Lecturer },\r\n    public dialogRef: MatDialogRef<LecturerCreateUpdateDailogBoxComponent>) {\r\n    this.streamDropdownValues = new Array<Stream>();\r\n    this.subscriptions = new Subscription();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dialogRef.updateSize(\"27%\");\r\n    this.action = this.data.action.toLowerCase();\r\n\r\n    this.lecturerForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      stream: ['', Validators.required]\r\n    });\r\n\r\n    if (this.action === \"save\") {\r\n      this.title = LECTURER_CREATE_FORM_HEADER;\r\n      this.submitBtnLabel = SAVE_BTN_LABEL;\r\n    } else if (this.action === \"update\") {\r\n      this.title = LECTURER_UPDATE_FORM_HEADER;\r\n      this.submitBtnLabel = UPDATE_BTN_LABEL;\r\n      this.lecturerForm.get('firstName').setValue(this.data.lecturer.firstName);\r\n      this.lecturerForm.get('lastName').setValue(this.data.lecturer.lastName);\r\n      this.lecturerForm.get('stream').setValue(this.data.lecturer.streamId);\r\n    }\r\n\r\n    this.disableSave$ = this.lecturerService.isLecturerFormSubmitDisabled.asObservable();\r\n\r\n    this.subscriptions.add(\r\n      this.streamService.streamsData$.subscribe(data => {\r\n        this.streamDropdownValues = data;\r\n      })\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    let lecturer = {\r\n      firstName: this.lecturerForm.get('firstName').value,\r\n      lastName: this.lecturerForm.get('lastName').value,\r\n      collegeId: this.collegeService.currentActiveClgId,\r\n      streamId: this.lecturerForm.get('stream').value,\r\n    } as Lecturer;\r\n    if (this.data.action.toLowerCase() === \"save\") this.lecturerService.addLecturer(lecturer);\r\n    else if (this.data.action.toLowerCase() === \"update\") {\r\n      lecturer.id = this.data.lecturer.id;\r\n      this.lecturerService.updateLecturerDetails(this.data.lecturer.id, lecturer);\r\n    }\r\n    this.dialogRef.close();\r\n    this.uiCommonService.load.next(true);\r\n  }\r\n\r\n}\r\n","<div>\r\n    <h2 mat-dialog-title>{{ title }}</h2>\r\n    <div>\r\n        <form [formGroup]=\"lecturerForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div>\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>First Name</mat-label>\r\n                    <input matInput formControlName=\"firstName\" required>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Last Name</mat-label>\r\n                    <input matInput formControlName=\"lastName\" required>\r\n                </mat-form-field>\r\n            </div>\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Stream</mat-label>\r\n                <mat-select formControlName=\"stream\" required>\r\n                    <mat-option *ngFor=\"let stream of streamDropdownValues\" [value]=\"stream.id\">{{stream.name}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <div mat-dialog-actions align=\"center\">\r\n                <button type=\"button\" mat-raised-button mat-dialog-close>Cancel</button>\r\n                <button type=\"submit\" mat-raised-button [disabled]=\"(disableSave$ | async) || !lecturerForm.valid\">{{ submitBtnLabel }}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { Lecturer } from 'src/app/models/lecturer';\r\nimport { Stream } from 'src/app/models/stream';\r\nimport { LecturerService } from 'src/app/services/functional/lecturer.service';\r\nimport { StreamService } from 'src/app/services/functional/stream.service';\r\nimport { UiCommonService } from 'src/app/services/ui-common.service';\r\nimport { DeletePromptDailogComponent } from '../delete-prompt-dailog/delete-prompt-dailog.component';\r\nimport { LecturerCreateUpdateDailogBoxComponent } from './create-update-dailog-box/create-update-dailog-box.component';\r\n\r\n@Component({\r\n  selector: 'app-lecturers-data-table',\r\n  templateUrl: './lecturers-data-table.component.html',\r\n  styleUrls: ['./lecturers-data-table.component.scss']\r\n})\r\nexport class LecturersDataTableComponent implements OnInit, AfterViewInit {\r\n\r\n  @Input() displayedColumns: string[];\r\n\r\n  dataSource: MatTableDataSource<Lecturer>;\r\n  subcriptions: Subscription;\r\n  streamsData: Stream[];\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  loadTable$: Observable<boolean>; \r\n\r\n  constructor(private lecturerService: LecturerService,\r\n    private streamService: StreamService,\r\n    private uiCommonService: UiCommonService,\r\n    public dialog: MatDialog) {\r\n    this.dataSource = new MatTableDataSource<Lecturer>();\r\n    this.subcriptions = new Subscription();\r\n    this.streamsData = new Array<Stream>();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadTable$ = this.uiCommonService.load$;\r\n\r\n    this.subcriptions.add(\r\n      this.streamService.streamsData$.subscribe(data => this.streamsData = data)\r\n    );\r\n\r\n    this.subcriptions.add(\r\n      this.lecturerService.latestFiltredLecturerData.subscribe(data => this.dataSource.data = data)\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getStream(id: number): Stream {\r\n    return this.streamsData.find(stream => stream.id === id);\r\n  }\r\n\r\n  openDialog() {\r\n    const dialogRef = this.dialog.open(LecturerCreateUpdateDailogBoxComponent);\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n\r\n  onDeleteClick(lecturer: Lecturer) {\r\n    this.openDeletePromptDailog(lecturer);\r\n  }\r\n\r\n  onUpdateClick(lecturer: Lecturer) {\r\n    this.openCreateOrUpdateDialog(\"update\", lecturer);\r\n  }\r\n\r\n  onCreateClick() {\r\n    this.openCreateOrUpdateDialog(\"save\");\r\n  }\r\n\r\n  private openCreateOrUpdateDialog(action: string, lecturer?: Lecturer) {\r\n    const dialogRef = this.dialog.open(LecturerCreateUpdateDailogBoxComponent, {\r\n      data: { action: action, lecturer: lecturer },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n\r\n  private openDeletePromptDailog(lecturer: Lecturer) {\r\n    const dialogRef = this.dialog.open(DeletePromptDailogComponent, {\r\n      width: \"32em\",\r\n      data: { caller: \"lecturer-table\" },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result?.event.toLowerCase() === \"yes\") {\r\n        this.uiCommonService.load.next(true);\r\n        this.lecturerService.removeLecturer(lecturer.id);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"demo-button-container\">\r\n  <button mat-raised-button class=\"demo-button\" (click)=\"onCreateClick()\">\r\n    Add Lecturer\r\n  </button>\r\n</div>\r\n<div class=\"loading-shade\" *ngIf=\"loadTable$ | async\">\r\n  <mat-spinner></mat-spinner>\r\n</div>\r\n<div class=\"mat-elevation-z8\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <ng-container matColumnDef=\"Id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"firstName\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> First Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.firstName}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"lastName\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Last Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.lastName}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"stream\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Stream </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{getStream(element.streamId).name}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"actions\">\r\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <button mat-icon-button title=\"Update\" (click)=\"onUpdateClick(element)\">\r\n          <mat-icon>update</mat-icon>\r\n        </button>\r\n        <button mat-icon-button title=\"Delete\" (click)=\"onDeleteClick(element)\">\r\n          <mat-icon>delete</mat-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n  </table>\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>","import { Component, Inject, OnInit, Optional } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { SAVE_BTN_LABEL, STUDENT_CREATE_FORM_HEADER, STUDENT_UPDATE_FORM_HEADER, UPDATE_BTN_LABEL } from 'src/app/common/Constants';\r\nimport { Stream } from 'src/app/models/stream';\r\nimport { Student } from 'src/app/models/student';\r\nimport { CollegeService } from 'src/app/services/functional/college.service';\r\nimport { StreamService } from 'src/app/services/functional/stream.service';\r\nimport { StudentService } from 'src/app/services/functional/student.service';\r\nimport { UiCommonService } from 'src/app/services/ui-common.service';\r\n\r\n@Component({\r\n  selector: 'app-student-create-update-dailog-box',\r\n  templateUrl: './create-update-dailog-box.component.html',\r\n  styleUrls: ['./create-update-dailog-box.component.scss']\r\n})\r\nexport class StudentCreateUpdateDailogBoxComponent implements OnInit {\r\n\r\n  studentForm: FormGroup;\r\n  streamDropdownValues: Stream[];\r\n  currentStreamYearDropdownValues: number[];\r\n  subscriptions: Subscription;\r\n  disableSave$: Observable<boolean>;\r\n  action: string;\r\n  title: string;\r\n  submitBtnLabel: string;\r\n\r\n  constructor(private studentervice: StudentService,\r\n    private streamService: StreamService,\r\n    private collegeService: CollegeService,\r\n    private formBuilder: FormBuilder,\r\n    private uiCommonService: UiCommonService,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: { action: string, student: Student },\r\n    public dialogRef: MatDialogRef<StudentCreateUpdateDailogBoxComponent>) {\r\n    this.streamDropdownValues = new Array<Stream>();\r\n    this.currentStreamYearDropdownValues = new Array<number>();\r\n    this.subscriptions = new Subscription();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dialogRef.updateSize(\"27%\");\r\n    this.action = this.data.action.toLowerCase();\r\n\r\n    this.studentForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      stream: ['', Validators.required],\r\n      currentYear: ['', Validators.required]\r\n    });\r\n\r\n    if (this.action === \"save\") {\r\n      this.title = STUDENT_CREATE_FORM_HEADER;\r\n      this.submitBtnLabel = SAVE_BTN_LABEL;\r\n    } else if (this.action === \"update\") {\r\n      this.title = STUDENT_UPDATE_FORM_HEADER;\r\n      this.submitBtnLabel = UPDATE_BTN_LABEL;\r\n      this.studentForm.get('firstName').setValue(this.data.student.firstName);\r\n      this.studentForm.get('lastName').setValue(this.data.student.lastName);\r\n      this.studentForm.get('stream').setValue(this.data.student.streamId);\r\n      this.studentForm.get('currentYear').setValue(this.data.student.currStreamYear);\r\n    }\r\n\r\n    this.disableSave$ = this.studentervice.isStudentFormSubmitDisabled.asObservable();\r\n\r\n    this.subscriptions.add(\r\n      this.streamService.streamsData$.subscribe(data => {\r\n        this.streamDropdownValues = data;\r\n        this.currentStreamYearDropdownValues = [...Array.from({ length: Math.max(...data.map(obj => obj.noOfYears)) }, (_, i) => i + 1)];\r\n      })\r\n    );\r\n  }\r\n\r\n  updateCurrentYearDropdown() {\r\n    let maxYears = this.streamDropdownValues.find(stream => stream.id === this.studentForm.get(\"stream\").value).noOfYears;\r\n    this.currentStreamYearDropdownValues = [...Array.from({ length: maxYears }, (_, i) => i + 1)];\r\n  }\r\n\r\n  onSubmit() {\r\n    let student = {\r\n      firstName: this.studentForm.get('firstName').value,\r\n      lastName: this.studentForm.get('lastName').value,\r\n      collegeId: this.collegeService.currentActiveClgId,\r\n      streamId: this.studentForm.get('stream').value,\r\n      currStreamYear: this.studentForm.get('currentYear').value\r\n    } as Student;\r\n\r\n    if (this.data.action.toLowerCase() === \"save\") this.studentervice.addStudent(student);\r\n    else if (this.data.action.toLowerCase() === \"update\") {\r\n      student.id = this.data.student.id;\r\n      this.studentervice.updateStudentDetails(this.data.student.id, student);\r\n    }\r\n    this.dialogRef.close();\r\n    this.uiCommonService.load.next(true);\r\n  }\r\n}","<div>\r\n    <h2 mat-dialog-title>{{ title }}</h2>\r\n    <div class=\"content\">\r\n        <form [formGroup]=\"studentForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div>\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>First Name</mat-label>\r\n                    <input matInput formControlName=\"firstName\" required>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Last Name</mat-label>\r\n                    <input matInput formControlName=\"lastName\" required>\r\n                </mat-form-field>\r\n            </div>\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Stream</mat-label>\r\n                <mat-select formControlName=\"stream\" (selectionChange)=\"updateCurrentYearDropdown()\" required>\r\n                    <mat-option *ngFor=\"let stream of streamDropdownValues\" [value]=\"stream.id\">{{stream.name}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Current Year</mat-label>\r\n                <mat-select formControlName=\"currentYear\" required>\r\n                    <mat-option *ngFor=\"let year of currentStreamYearDropdownValues\" [value]=\"year\">{{year}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <div mat-dialog-actions align=\"center\">\r\n                <button type=\"button\" mat-raised-button mat-dialog-close>Cancel</button>\r\n                <button type=\"submit\" mat-raised-button [disabled]=\"(disableSave$ | async) || !studentForm.valid\">{{ submitBtnLabel }}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { Stream } from 'src/app/models/stream';\r\nimport { Student } from 'src/app/models/student';\r\nimport { StreamService } from 'src/app/services/functional/stream.service';\r\nimport { StudentService } from 'src/app/services/functional/student.service';\r\nimport { UiCommonService } from 'src/app/services/ui-common.service';\r\nimport { DeletePromptDailogComponent } from '../delete-prompt-dailog/delete-prompt-dailog.component';\r\nimport { StudentCreateUpdateDailogBoxComponent } from './create-update-dailog-box/create-update-dailog-box.component';\r\n\r\n@Component({\r\n  selector: 'app-students-data-table',\r\n  templateUrl: './students-data-table.component.html',\r\n  styleUrls: ['./students-data-table.component.scss']\r\n})\r\nexport class StudentsDataTableComponent implements OnInit, AfterViewInit {\r\n\r\n  @Input() displayedColumns: string[];\r\n  @Input() data: Student[];\r\n\r\n  dataSource: MatTableDataSource<Student>;\r\n\r\n  streamsData: Stream[];\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  subscriptions: Subscription;\r\n\r\n  loadTable$: Observable<boolean>; \r\n\r\n  constructor(private streamService: StreamService, \r\n    private studentService: StudentService, \r\n    private uiCommonService: UiCommonService,\r\n    public dialog: MatDialog) {\r\n    this.dataSource = new MatTableDataSource<Student>();\r\n    this.streamsData = new Array<Stream>();\r\n    this.subscriptions = new Subscription();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadTable$ = this.uiCommonService.load$;\r\n\r\n    this.subscriptions.add(\r\n      this.streamService.streamsData$.subscribe(data => this.streamsData = data)\r\n    );\r\n\r\n    this.subscriptions.add(\r\n      this.studentService.latestFilteredStudentData.asObservable().subscribe(data => {\r\n        this.dataSource.data = data;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getStream(id: number): Stream {\r\n    return this.streamsData.find(stream => stream.id === id);\r\n  }\r\n\r\n  onDeleteClick(student: Student) {\r\n    this.openDeletePromptDailog(student);\r\n  }\r\n\r\n  onUpdateClick(student: Student) {\r\n    this.openCreateOrUpdateDialog(\"update\", student);\r\n  }\r\n\r\n  onCreateClick() {\r\n    this.openCreateOrUpdateDialog(\"save\");\r\n  }\r\n\r\n  private openCreateOrUpdateDialog(action: string, student?: Student) {\r\n    const dialogRef = this.dialog.open(StudentCreateUpdateDailogBoxComponent, {\r\n      data: { action: action, student: student },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n\r\n  private openDeletePromptDailog(student: Student) {\r\n    const dialogRef = this.dialog.open(DeletePromptDailogComponent, {\r\n      data: { caller: \"student-table\" },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result?.event.toLowerCase() === \"yes\") {\r\n        this.uiCommonService.load.next(true);\r\n        this.studentService.removeStudent(student.id);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"demo-button-container\">\r\n  <button mat-raised-button class=\"demo-button\" (click)=\"onCreateClick()\">\r\n    Add Student\r\n  </button>\r\n</div>\r\n<div class=\"loading-shade\" *ngIf=\"loadTable$ | async\">\r\n  <mat-spinner></mat-spinner>\r\n</div>\r\n<div class=\"mat-elevation-z8\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <ng-container matColumnDef=\"Id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"firstName\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> First Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.firstName}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"lastName\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Last Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.lastName}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"stream\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Stream </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{getStream(element.streamId).name}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"maxYearsInStream\" mat-sort-header>\r\n      <th mat-header-cell *matHeaderCellDef> Course Duration(Year) </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{ getStream(element.streamId).noOfYears }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"currentYear\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Current Year </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{ element.currStreamYear }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"actions\">\r\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <button mat-icon-button title=\"Update\" (click)=\"onUpdateClick(element)\">\r\n          <mat-icon>update</mat-icon>\r\n        </button>\r\n        <button mat-icon-button title=\"Delete\" (click)=\"onDeleteClick(element)\">\r\n          <mat-icon>delete</mat-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n  </table>\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError, filter, retry } from 'rxjs/operators';\r\nimport { FrequentHttpHeaders } from \"../common/HttpHeaders\";\r\n\r\n@Injectable()\r\nexport class MyInterceptor implements HttpInterceptor {\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        // Attach headers to every request\r\n        const reqClone = req.clone({\r\n            setHeaders: FrequentHttpHeaders\r\n        });\r\n\r\n        return next.handle(reqClone).pipe(\r\n\r\n            // Retry calling the http method one more time on failure\r\n            retry(1),\r\n\r\n            // Check if the request is related to college, so that we want to modify only the response from collge API'S \r\n            // filter(event => event instanceof HttpResponse && reqClone.url.includes('college')),\r\n\r\n            // tap((response: HttpResponse<any>) => console.log(\"Reponse - \", response.body)),\r\n\r\n            // Handle Error\r\n            catchError((error: HttpErrorResponse) => {\r\n                alert(`You got error with ${reqClone.url}`);\r\n                return throwError(error);\r\n            })\r\n        );\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { InMemoryDbService, RequestInfo } from 'angular-in-memory-web-api';\r\nimport { Observable } from 'rxjs';\r\nimport { COLLEGE_DATA } from 'src/app/common/helpers/college.data';\r\nimport { LECTURER_DATA } from 'src/app/common/helpers/lecturer.data';\r\nimport { STREAM_DATA } from 'src/app/common/helpers/stream.data';\r\nimport { STUDENT_DATA } from 'src/app/common/helpers/student.data';\r\nimport { College } from 'src/app/models/college';\r\nimport { Lecturer } from 'src/app/models/lecturer';\r\nimport { Stream } from 'src/app/models/stream';\r\nimport { Student } from 'src/app/models/student';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InMemoryDataService implements InMemoryDbService {\r\n\r\n  constructor() { }\r\n\r\n  createDb(reqInfo?: RequestInfo): {} | Observable<{}> | Promise<{}> {\r\n    return {\r\n      stream: STREAM_DATA,\r\n      student: STUDENT_DATA,\r\n      lecturer: LECTURER_DATA,\r\n      college: COLLEGE_DATA\r\n    };\r\n  }\r\n\r\n  genId<T extends College | Student | Stream | Lecturer>(data: T[]): number {\r\n    return data.length > 0 ? Math.max(...data.map(t => t.id)) + 1 : 1;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject, combineLatest, Observable, Subject, Subscription } from 'rxjs';\r\nimport { COLLEGE_LOADING_MESSAGE, ERROR_MESSAGE } from 'src/app/common/Constants';\r\nimport { College } from 'src/app/models/college';\r\nimport { UiCommonService } from '../ui-common.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CollegeService implements OnDestroy {\r\n\r\n  private requestUrl: string;\r\n\r\n  collegesData: BehaviorSubject<Array<College>>;\r\n  collegesData$: Observable<Array<College>>;\r\n\r\n  latestOpenedPanelId: Subject<number>;\r\n  latestClosedPanelId: Subject<number>;\r\n\r\n  private latestFilteredCollegesData: Subject<Array<College>>;\r\n  latestFilteredCollegesData$: Observable<Array<College>>;\r\n\r\n  isCollegeFormSubmitDisabled: BehaviorSubject<boolean>;\r\n\r\n  currentActiveClgId: number;\r\n\r\n  refreshCollegeData: Subject<boolean>;\r\n\r\n  private subscriptions: Subscription;\r\n\r\n  constructor(private _http: HttpClient,\r\n    private uiCommonService: UiCommonService) {\r\n    this.requestUrl = \"api/college/\";\r\n    this.collegesData = new BehaviorSubject<Array<College>>([]);\r\n    this.collegesData$ = this.collegesData.asObservable();\r\n    this.latestClosedPanelId = new Subject<number>();\r\n    this.latestOpenedPanelId = new Subject<number>();\r\n\r\n    this.subscriptions = new Subscription();\r\n    this.latestFilteredCollegesData = new Subject<Array<College>>();\r\n    this.latestFilteredCollegesData$ = this.latestFilteredCollegesData.asObservable();\r\n    this.isCollegeFormSubmitDisabled = new BehaviorSubject<boolean>(false);\r\n\r\n    this.refreshCollegeData = new Subject<boolean>();\r\n\r\n    this.subscriptions.add(\r\n      this.latestOpenedPanelId.asObservable().subscribe(collegeId => this.currentActiveClgId = collegeId)\r\n    );\r\n\r\n    this.filterCollegeData();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n    this.collegesData.complete();\r\n  }\r\n\r\n  addCollege(college: College) {\r\n    let response$ = this._http.post<College>(this.requestUrl, college);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => {\r\n        this.isCollegeFormSubmitDisabled.next(false);\r\n        data ? this.getAllCollegesDetails() : null;\r\n      }, error => this.uiCommonService.loadingMessage.next(ERROR_MESSAGE))\r\n    );\r\n  }\r\n\r\n  getAllCollegesDetails() {\r\n    this.uiCommonService.loadingMessage.next(COLLEGE_LOADING_MESSAGE);\r\n    let response$ = this._http.get<Array<College>>(this.requestUrl);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => {\r\n        this.collegesData.next(data);\r\n        this.uiCommonService.loadingMessage.next('');\r\n      }, error => this.uiCommonService.loadingMessage.next(ERROR_MESSAGE))\r\n    );\r\n  }\r\n\r\n  updateCollegeDetails(id: number, college: College) {\r\n    let response$ = this._http.put<College>(this.requestUrl + id, college);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => {\r\n        this.isCollegeFormSubmitDisabled.next(false);\r\n        this.getAllCollegesDetails();\r\n      }, error => this.uiCommonService.loadingMessage.next(ERROR_MESSAGE))\r\n    );\r\n  }\r\n\r\n  removeCollege(id: number) {\r\n    let response$ = this._http.delete<College>(this.requestUrl + id);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => data ? this.getAllCollegesDetails() : null, error => this.uiCommonService.loadingMessage.next(ERROR_MESSAGE))\r\n    );\r\n  }\r\n\r\n  filterCollegeData() {\r\n    this.subscriptions.add(\r\n      this.collegesData$.subscribe(data => {\r\n        this.latestFilteredCollegesData.next(data);\r\n        this.uiCommonService.load.next(false);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, combineLatest, Observable, Subject, Subscription } from 'rxjs';\r\nimport { ERROR_MESSAGE } from 'src/app/common/Constants';\r\nimport { Lecturer } from 'src/app/models/lecturer';\r\nimport { UiCommonService } from '../ui-common.service';\r\nimport { CollegeService } from './college.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LecturerService {\r\n\r\n  private requestUrl: string;\r\n\r\n  lecturersData: BehaviorSubject<Array<Lecturer>>;\r\n  lecturersData$: Observable<Array<Lecturer>>;\r\n\r\n  latestFiltredLecturerData: Subject<Array<Lecturer>>;\r\n  isLecturerFormSubmitDisabled: BehaviorSubject<boolean>;\r\n\r\n  private subscriptions: Subscription;\r\n\r\n  constructor(private _http: HttpClient, \r\n    private collegeService: CollegeService,\r\n    private uiCommonService: UiCommonService) {\r\n    this.requestUrl = \"api/lecturer/\";\r\n    this.lecturersData = new BehaviorSubject<Array<Lecturer>>([]);\r\n    this.lecturersData$ = this.lecturersData.asObservable();\r\n    this.latestFiltredLecturerData = new Subject<Array<Lecturer>>();\r\n    this.subscriptions = new Subscription();\r\n    this.isLecturerFormSubmitDisabled = new BehaviorSubject<boolean>(false);\r\n    this.filterLecturerData();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n    this.lecturersData.complete();\r\n  }\r\n\r\n  addLecturer(lecturer: Lecturer) {\r\n    this.isLecturerFormSubmitDisabled.next(true);\r\n    let response$ = this._http.post<Lecturer>(this.requestUrl, lecturer);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => {\r\n        this.isLecturerFormSubmitDisabled.next(false);\r\n        data ? this.getAllLecturerDetails() : null\r\n      }, error => this.uiCommonService.loadingMessage.next(ERROR_MESSAGE))\r\n    );\r\n  }\r\n\r\n  getAllLecturerDetails() {\r\n    let response$ = this._http.get<Array<Lecturer>>(this.requestUrl);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => this.lecturersData.next(data), error => this.uiCommonService.loadingMessage.next(ERROR_MESSAGE))\r\n    );\r\n  }\r\n\r\n  updateLecturerDetails(id: number, lecturer: Lecturer) {\r\n    this.isLecturerFormSubmitDisabled.next(true);\r\n    let response$ = this._http.put<Lecturer>(this.requestUrl + id, lecturer);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => {\r\n        this.isLecturerFormSubmitDisabled.next(false);\r\n        this.getAllLecturerDetails();\r\n      }, error => this.uiCommonService.loadingMessage.next(ERROR_MESSAGE))\r\n    );\r\n  }\r\n\r\n  removeLecturer(id: number) {\r\n    let response$ = this._http.delete<Lecturer>(this.requestUrl + id);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => this.getAllLecturerDetails(), error => this.uiCommonService.loadingMessage.next(ERROR_MESSAGE))\r\n    );\r\n  }\r\n\r\n  filterLecturerData() {\r\n    this.subscriptions.add(\r\n      combineLatest(\r\n        this.collegeService.latestOpenedPanelId.asObservable(),\r\n        this.lecturersData$,\r\n        (collegeId, lecturers) => {\r\n          this.latestFiltredLecturerData.next(lecturers.filter(obj => obj.collegeId == collegeId));\r\n          this.uiCommonService.load.next(false);\r\n        }\r\n      ).subscribe()\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { Stream } from 'src/app/models/stream';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StreamService implements OnDestroy {\r\n\r\n  private requestUrl: string;\r\n\r\n  streamsData: BehaviorSubject<Array<Stream>>;\r\n  streamsData$: Observable<Array<Stream>>;\r\n\r\n  subscriptions: Subscription;\r\n\r\n  constructor(private _http: HttpClient) {\r\n    this.requestUrl = \"api/stream/\";\r\n    this.streamsData = new BehaviorSubject<Array<Stream>>([]);\r\n    this.streamsData$ = this.streamsData.asObservable();\r\n\r\n    this.subscriptions = new Subscription();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n    this.streamsData.complete();\r\n  }\r\n\r\n  addStream(stream: Stream) {\r\n    let response$ = this._http.post<Stream>(this.requestUrl, stream);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => data ? this.getAllStreamsDetails() : null, error => console.log(error))\r\n    );\r\n  }\r\n\r\n  getAllStreamsDetails(caller?: string) {\r\n    let response$ = this._http.get<Array<Stream>>(this.requestUrl);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => this.streamsData.next(data), error => console.log(error))\r\n    );\r\n  }\r\n\r\n  updateStreamDetails(id: number, stream: Stream) {\r\n    let response$ = this._http.put<Stream>(this.requestUrl + id, stream);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => data ? this.getAllStreamsDetails() : null, error => console.log(error))\r\n    );\r\n  }\r\n\r\n  removeStream(id: number) {\r\n    let response$ = this._http.delete<Stream>(this.requestUrl + id);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => data ? this.getAllStreamsDetails() : null, error => console.log(error))\r\n    );\r\n  }\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject, combineLatest, Observable, Subject, Subscription } from 'rxjs';\r\nimport { ERROR_MESSAGE } from 'src/app/common/Constants';\r\nimport { Student } from 'src/app/models/student';\r\nimport { UiCommonService } from '../ui-common.service';\r\nimport { CollegeService } from './college.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StudentService implements OnDestroy {\r\n\r\n  private requestUrl: string;\r\n\r\n  studentsData: BehaviorSubject<Array<Student>>;\r\n  studentsData$: Observable<Array<Student>>;\r\n\r\n  latestFilteredStudentData: Subject<Array<Student>>;\r\n  isStudentFormSubmitDisabled: BehaviorSubject<boolean>;\r\n\r\n  private subscriptions: Subscription;\r\n\r\n  constructor(private _http: HttpClient,\r\n    private collegeService: CollegeService,\r\n    private uiCommonService: UiCommonService) {\r\n    this.requestUrl = \"api/student/\";\r\n    this.studentsData = new BehaviorSubject<Array<Student>>([]);\r\n    this.studentsData$ = this.studentsData.asObservable();\r\n    this.latestFilteredStudentData = new Subject<Array<Student>>();\r\n    this.isStudentFormSubmitDisabled = new BehaviorSubject<boolean>(false);\r\n    this.subscriptions = new Subscription();\r\n    this.filterStudentData();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n    this.studentsData.complete();\r\n  }\r\n\r\n  addStudent(student: Student) {\r\n    this.isStudentFormSubmitDisabled.next(true);\r\n    let response$ = this._http.post<Student>(this.requestUrl, student);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => {\r\n        this.isStudentFormSubmitDisabled.next(false);\r\n        data ? this.getAllStudentsDetails() : null;\r\n      }, error => this.uiCommonService.loadingMessage.next(ERROR_MESSAGE))\r\n    );\r\n  }\r\n\r\n  getAllStudentsDetails() {\r\n    let response$ = this._http.get<Array<Student>>(this.requestUrl);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => {\r\n        this.studentsData.next(data);\r\n      }, error => this.uiCommonService.loadingMessage.next(ERROR_MESSAGE))\r\n    );\r\n  }\r\n\r\n  updateStudentDetails(id: number, student: Student) {\r\n    this.isStudentFormSubmitDisabled.next(true);\r\n    let response$ = this._http.put<Student>(this.requestUrl + id, student);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => {\r\n        this.isStudentFormSubmitDisabled.next(false);\r\n        this.getAllStudentsDetails();\r\n      }, error => this.uiCommonService.loadingMessage.next(ERROR_MESSAGE))\r\n    );\r\n  }\r\n\r\n  removeStudent(id: number) {\r\n    let response$ = this._http.delete<Student>(this.requestUrl + id);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => this.getAllStudentsDetails(), error => this.uiCommonService.loadingMessage.next(ERROR_MESSAGE))\r\n    );\r\n  }\r\n\r\n  filterStudentData() {\r\n    this.subscriptions.add(\r\n      combineLatest(\r\n        this.collegeService.latestOpenedPanelId.asObservable(),\r\n        this.studentsData$,\r\n        (collegeId, students) => {\r\n          if(collegeId && students) {\r\n            this.latestFilteredStudentData.next(students.filter(obj => obj.collegeId == collegeId));\r\n            this.uiCommonService.load.next(false);\r\n          }\r\n        }\r\n      ).subscribe()\r\n    )\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UiCommonService {\r\n\r\n  load: BehaviorSubject<boolean>;\r\n  load$: Observable<boolean>;\r\n\r\n  loadingMessage: BehaviorSubject<string>;\r\n  loadingMessage$: Observable<string>;\r\n\r\n  constructor() {\r\n    this.load = new BehaviorSubject<boolean>(false);\r\n    this.load$ = this.load.asObservable();\r\n\r\n    this.loadingMessage = new BehaviorSubject<string>('');\r\n    this.loadingMessage$ = this.loadingMessage.asObservable();\r\n  }\r\n}\r\n","export const environment = {\r\n  production: true\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}