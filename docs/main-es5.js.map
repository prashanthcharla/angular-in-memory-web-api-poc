{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/common/Constants.ts","webpack:///src/app/common/HttpHeaders.ts","webpack:///src/app/common/helpers/college.data.ts","webpack:///src/app/common/helpers/lecturer.data.ts","webpack:///src/app/common/helpers/stream.data.ts","webpack:///src/app/common/helpers/student.data.ts","webpack:///src/app/components/college-database/college-database.component.ts","webpack:///src/app/components/college-database/college-database.component.html","webpack:///src/app/components/college-database/create-update-dailog-box/create-update-dailog-box.component.ts","webpack:///src/app/components/college-database/create-update-dailog-box/create-update-dailog-box.component.html","webpack:///src/app/components/college-database/delete-prompt-dailog/delete-prompt-dailog.component.ts","webpack:///src/app/components/college-database/delete-prompt-dailog/delete-prompt-dailog.component.html","webpack:///src/app/components/college-database/lecturers-data-table/create-update-dailog-box/create-update-dailog-box.component.ts","webpack:///src/app/components/college-database/lecturers-data-table/create-update-dailog-box/create-update-dailog-box.component.html","webpack:///src/app/components/college-database/lecturers-data-table/lecturers-data-table.component.ts","webpack:///src/app/components/college-database/lecturers-data-table/lecturers-data-table.component.html","webpack:///src/app/components/college-database/students-data-table/create-update-dailog-box/create-update-dailog-box.component.ts","webpack:///src/app/components/college-database/students-data-table/create-update-dailog-box/create-update-dailog-box.component.html","webpack:///src/app/components/college-database/students-data-table/students-data-table.component.ts","webpack:///src/app/components/college-database/students-data-table/students-data-table.component.html","webpack:///src/app/interceptors/TestInterceptor.ts","webpack:///src/app/services/data/in-memory-data.service.ts","webpack:///src/app/services/functional/college.service.ts","webpack:///src/app/services/functional/lecturer.service.ts","webpack:///src/app/services/functional/stream.service.ts","webpack:///src/app/services/functional/student.service.ts","webpack:///src/app/services/ui-common.service.ts","webpack:///src/environments/environment.prod.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","streamService","lecturerServive","studentService","collegeService","title","getAllStreamsDetails","getAllLecturerDetails","getAllStudentsDetails","getAllCollegesDetails","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","production","dataEncapsulation","delay","declarations","providers","bootstrap","COLLEGE_LOADING_MESSAGE","ERROR_MESSAGE","STUDENT_CREATE_FORM_HEADER","STUDENT_UPDATE_FORM_HEADER","LECTURER_CREATE_FORM_HEADER","LECTURER_UPDATE_FORM_HEADER","SAVE_BTN_LABEL","UPDATE_BTN_LABEL","FrequentHttpHeaders","COLLEGE_DATA","location","name","principalId","LECTURER_DATA","streamId","firstName","lastName","collegeId","STREAM_DATA","noOfYears","STUDENT_DATA","currStreamYear","CollegeDatabaseComponent","uiCommonService","dialog","subtitle","subscriptions","activePanel","collegesList","Array","studentDisplayColumns","lecturerDispalyColumns","loadingMessage$","latestFilteredCollegesData$","subscribe","colleges","index","latestOpenedPanelId","next","latestClosedPanelId","openCreateOrUpdateDialog","action","dialogRef","open","data","afterClosed","result","console","log","CollegeCreateUpdateDailogBoxComponent","lecturerService","formBuilder","collegeForm","group","required","city","state","disableFieldsExceptCollege","disableFieldsExceptCollege$","asObservable","add","disable","get","enable","updateSize","toLowerCase","submitBtnLabel","disableSave$","isCollegeFormSubmitDisabled","collegesData$","collegeDropdownValues","selectedCollege","find","college","value","setValue","split","lecturersData$","lecturerDropdownValues","filter","lecturer","addCollege","updateCollegeDetails","close","load","onSubmit","DeletePromptDailogComponent","event","onAction","LecturerCreateUpdateDailogBoxComponent","streamDropdownValues","lecturerForm","stream","isLecturerFormSubmitDisabled","streamsData$","currentActiveClgId","addLecturer","updateLecturerDetails","LecturersDataTableComponent","dataSource","subcriptions","streamsData","loadTable$","load$","latestFiltredLecturerData","paginator","sort","openDeletePromptDailog","width","caller","removeLecturer","onCreateClick","StudentCreateUpdateDailogBoxComponent","studentervice","currentStreamYearDropdownValues","studentForm","currentYear","student","isStudentFormSubmitDisabled","from","length","Math","max","map","obj","_","i","maxYears","addStudent","updateStudentDetails","updateCurrentYearDropdown","StudentsDataTableComponent","latestFilteredStudentData","removeStudent","MyInterceptor","reqClone","clone","setHeaders","handle","pipe","error","alert","url","InMemoryDataService","reqInfo","t","providedIn","CollegeService","_http","requestUrl","collegesData","latestFilteredCollegesData","refreshCollegeData","filterCollegeData","unsubscribe","complete","response$","post","loadingMessage","put","LecturerService","lecturersData","filterLecturerData","lecturers","StreamService","StudentService","studentsData","studentsData$","filterStudentData","students","UiCommonService","environment","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Stream } from './models/stream';\r\nimport { CollegeService } from './services/functional/college.service';\r\nimport { LecturerService } from './services/functional/lecturer.service';\r\nimport { StreamService } from './services/functional/stream.service';\r\nimport { StudentService } from './services/functional/student.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'college-demo';\r\n  stream: Stream;\r\n\r\n  constructor(private streamService: StreamService,\r\n    private lecturerServive: LecturerService,\r\n    private studentService: StudentService,\r\n    private collegeService: CollegeService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.streamService.getAllStreamsDetails();\r\n    this.lecturerServive.getAllLecturerDetails();\r\n    this.studentService.getAllStudentsDetails();\r\n    this.collegeService.getAllCollegesDetails();\r\n  }\r\n}\r\n","<app-college-database></app-college-database>","import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CollegeDatabaseComponent } from './components/college-database/college-database.component';\r\nimport { LecturersDataTableComponent } from './components/college-database/lecturers-data-table/lecturers-data-table.component';\r\nimport { StudentCreateUpdateDailogBoxComponent } from './components/college-database/students-data-table/create-update-dailog-box/create-update-dailog-box.component';\r\nimport { LecturerCreateUpdateDailogBoxComponent } from './components/college-database/lecturers-data-table/create-update-dailog-box/create-update-dailog-box.component';\r\nimport { StudentsDataTableComponent } from './components/college-database/students-data-table/students-data-table.component';\r\nimport { InMemoryDataService } from './services/data/in-memory-data.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { DeletePromptDailogComponent } from './components/college-database/delete-prompt-dailog/delete-prompt-dailog.component';\r\nimport { CollegeCreateUpdateDailogBoxComponent } from './components/college-database/create-update-dailog-box/create-update-dailog-box.component';\r\nimport { MyInterceptor } from './interceptors/TestInterceptor';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CollegeDatabaseComponent,\r\n    LecturersDataTableComponent,\r\n    StudentsDataTableComponent,\r\n    StudentCreateUpdateDailogBoxComponent,\r\n    LecturerCreateUpdateDailogBoxComponent,\r\n    DeletePromptDailogComponent,\r\n    CollegeCreateUpdateDailogBoxComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    environment.production ?\r\n      HttpClientInMemoryWebApiModule.forRoot(InMemoryDataService, { dataEncapsulation: false, delay: 3000 }) :\r\n      null,\r\n    MatCardModule,\r\n    MatExpansionModule,\r\n    MatTabsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: MyInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export const COLLEGE_LOADING_MESSAGE: string = \"Getting collges data. Please wait...\";\r\n\r\nexport const ERROR_MESSAGE: string = \"Looks like there is some issue. Please try again.\";\r\n\r\nexport const STUDENT_CREATE_FORM_HEADER: string = \"Student Registration\";\r\n\r\nexport const STUDENT_UPDATE_FORM_HEADER: string = \"Update Student Details\";\r\n\r\nexport const LECTURER_CREATE_FORM_HEADER: string = \"Lecturer Registration\";\r\n\r\nexport const LECTURER_UPDATE_FORM_HEADER: string = \"Update Lecturer Details\";\r\n\r\nexport const SAVE_BTN_LABEL: string = \"Save\";\r\n\r\nexport const UPDATE_BTN_LABEL: string = \"Update\";","export const FrequentHttpHeaders = {\r\n        'Content-Type': \"application/json\",\r\n        'Accept': \"application/json\"\r\n};","import { College } from \"src/app/models/college\";\r\n\r\nexport const COLLEGE_DATA: Array<College> = [\r\n    {\r\n        id: 1,\r\n        location: \"Warangal, Telangana\",\r\n        name: \"Kakatiya Institute of Technology & Science\",\r\n        principalId: 0\r\n    },\r\n    {\r\n        id: 2,\r\n        location: \"Banglore, Karnataka\",\r\n        name: \"Indian Institute of Management\",\r\n        principalId: 0\r\n    },\r\n];","import { Lecturer } from \"src/app/models/lecturer\";\r\n\r\nexport const LECTURER_DATA: Array<Lecturer> = [\r\n    {\r\n        id: 1,\r\n        streamId: 1,\r\n        firstName: \"Pavan Kumar\",\r\n        lastName: \"Erraboina\",\r\n        collegeId: 1\r\n    },\r\n    {\r\n        id: 2,\r\n        streamId: 2,\r\n        firstName: \"Akhilesh\",\r\n        lastName: \"Yadav\",\r\n        collegeId: 1\r\n    },\r\n    {\r\n        id: 3,\r\n        streamId: 3,\r\n        firstName: \"Satish\",\r\n        lastName: \"Reddy\",\r\n        collegeId: 1\r\n    },\r\n    {\r\n        id: 4,\r\n        streamId: 4,\r\n        firstName: \"Ashok\",\r\n        lastName: \"Reddy\",\r\n        collegeId: 1\r\n    },\r\n    {\r\n        id: 5,\r\n        streamId: 5,\r\n        firstName: \"Madhu Priya\",\r\n        lastName: \"Putti\",\r\n        collegeId: 1\r\n    },\r\n    {\r\n        id: 6,\r\n        streamId: 6,\r\n        firstName: \"Sowjanya\",\r\n        lastName: \"Reddy\",\r\n        collegeId: 1\r\n    },\r\n];","import { Stream } from \"src/app/models/stream\";\r\n\r\nexport const STREAM_DATA: Array<Stream> = [\r\n    {\r\n        id: 1,\r\n        name: \"Electronics & Communications\",\r\n        noOfYears: 4\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Computer Science\",\r\n        noOfYears: 4\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Information Technology\",\r\n        noOfYears: 4\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Mechanical\",\r\n        noOfYears: 4\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Electronics & Electrical\",\r\n        noOfYears: 4\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Civil Engineering\",\r\n        noOfYears: 4\r\n    },\r\n];","import { Student } from \"src/app/models/student\";\r\n\r\nexport const STUDENT_DATA: Array<Student> = [\r\n    {\r\n        id: 1,\r\n        collegeId: 1,\r\n        firstName: \"Prashanth\",\r\n        lastName: \"Charla\",\r\n        streamId: 1,\r\n        currStreamYear: 2\r\n    },\r\n    {\r\n        id: 2,\r\n        collegeId: 1,\r\n        firstName: \"Vikas\",\r\n        lastName: \"Krishnamurthy\",\r\n        streamId: 2,\r\n        currStreamYear: 4\r\n    },\r\n    {\r\n        id: 3,\r\n        collegeId: 1,\r\n        firstName: \"Raj\",\r\n        lastName: \"Kumar\",\r\n        streamId: 4,\r\n        currStreamYear: 2\r\n    },\r\n    {\r\n        id: 4,\r\n        collegeId: 1,\r\n        firstName: \"Sajan\",\r\n        lastName: \"Kumar\",\r\n        streamId: 2,\r\n        currStreamYear: 4\r\n    },\r\n    {\r\n        id: 5,\r\n        collegeId: 1,\r\n        firstName: \"Yashwanth\",\r\n        lastName: \"Paindla\",\r\n        streamId: 1,\r\n        currStreamYear: 3\r\n    },\r\n    {\r\n        id: 6,\r\n        collegeId: 1,\r\n        firstName: \"Vishal\",\r\n        lastName: \"Palle\",\r\n        streamId: 3,\r\n        currStreamYear: 1\r\n    },\r\n    {\r\n        id: 7,\r\n        collegeId: 1,\r\n        firstName: \"Sai Krishna\",\r\n        lastName: \"Mudigonda\",\r\n        streamId: 1,\r\n        currStreamYear: 2\r\n    },\r\n    {\r\n        id: 8,\r\n        collegeId: 1,\r\n        firstName: \"Nikhil\",\r\n        lastName: \"Reddy\",\r\n        streamId: 3,\r\n        currStreamYear: 3\r\n    },\r\n    {\r\n        id: 9,\r\n        collegeId: 1,\r\n        firstName: \"Sharath\",\r\n        lastName: \"Reddy\",\r\n        streamId: 3,\r\n        currStreamYear: 1\r\n    },\r\n    {\r\n        id: 10,\r\n        collegeId: 1,\r\n        firstName: \"Girish\",\r\n        lastName: \"Golla\",\r\n        streamId: 6,\r\n        currStreamYear: 4\r\n    },\r\n];","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { College } from 'src/app/models/college';\r\nimport { CollegeService } from 'src/app/services/functional/college.service';\r\nimport { UiCommonService } from 'src/app/services/ui-common.service';\r\nimport { CollegeCreateUpdateDailogBoxComponent } from './create-update-dailog-box/create-update-dailog-box.component';\r\n\r\n@Component({\r\n  selector: 'app-college-database',\r\n  templateUrl: './college-database.component.html',\r\n  styleUrls: ['./college-database.component.scss']\r\n})\r\nexport class CollegeDatabaseComponent implements OnInit {\r\n\r\n  title: string;\r\n  subtitle: string;\r\n\r\n  collegesList: Array<College>;\r\n\r\n  studentDisplayColumns: string[];\r\n  lecturerDispalyColumns: string[];\r\n\r\n  subscriptions: Subscription;\r\n\r\n  activePanel: number;\r\n\r\n  loadingMessage$: Observable<string>;\r\n\r\n  constructor(private collegeService: CollegeService,\r\n    private uiCommonService: UiCommonService,\r\n    public dialog: MatDialog) {\r\n    this.title = \"Welcome to the College Database\";\r\n    this.subtitle = \"Explore & Manage\";\r\n\r\n    this.subscriptions = new Subscription();\r\n    this.activePanel = -1;\r\n\r\n    this.collegesList = new Array<College>();\r\n\r\n    this.studentDisplayColumns = [\"Id\", \"firstName\", \"lastName\", \"stream\", \"maxYearsInStream\", \"currentYear\", \"actions\"];\r\n    this.lecturerDispalyColumns = [\"Id\", \"firstName\", \"lastName\", \"stream\", \"actions\"];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadingMessage$ = this.uiCommonService.loadingMessage$;\r\n    this.collegeService.latestFilteredCollegesData$.subscribe(colleges => this.collegesList = colleges);\r\n  }\r\n\r\n  panelOpen(id: number, index: number) {\r\n    this.activePanel = index;\r\n    this.collegeService.latestOpenedPanelId.next(id);\r\n  }\r\n\r\n  panelClose(id: number, index: number) {\r\n    this.collegeService.latestClosedPanelId.next(id);\r\n  }\r\n\r\n  isExpansionPanelExpanded(index: number) {\r\n    return this.activePanel == index;\r\n  }\r\n\r\n  onCreateClick() {\r\n    this.openCreateOrUpdateDialog(\"save\");\r\n  }\r\n\r\n  onUpdateClick() {\r\n    this.openCreateOrUpdateDialog(\"update\");\r\n  }\r\n\r\n  private openCreateOrUpdateDialog(action: string) {\r\n    const dialogRef = this.dialog.open(CollegeCreateUpdateDailogBoxComponent, {\r\n      data: { action: action },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n}\r\n","<div>\r\n    <mat-card>\r\n        <mat-card-header>\r\n            <mat-card-title>{{ title }}</mat-card-title>\r\n            <mat-card-subtitle>{{ subtitle }}</mat-card-subtitle>\r\n            <span class=\"loadingMessage\">{{ loadingMessage$ | async }}</span>\r\n        </mat-card-header>\r\n        <mat-card-content *ngIf = \"(loadingMessage$ | async).length == 0\">\r\n            <div class=\"btns-grp\">\r\n                <button mat-raised-button class=\"btn\" (click)=\"onCreateClick()\">Add College</button>\r\n                <button mat-raised-button class=\"btn\" (click)=\"onUpdateClick()\">Update College</button>\r\n                <!-- <button mat-raised-button class=\"btn\">Delete College</button> -->\r\n            </div>\r\n            <mat-accordion multi>\r\n                <mat-expansion-panel *ngFor = \"let college of collegesList; index as i\" (opened)=\"panelOpen(college.id, i)\" (closed)=\"panelClose(college.id, i)\" [expanded] = \"isExpansionPanelExpanded(i)\">\r\n                    <mat-expansion-panel-header>\r\n                        <mat-panel-title>\r\n                            <span class=\"college\">{{ college.name }}</span>\r\n                            <span class=\"location\">{{ college.location }}</span>\r\n                        </mat-panel-title>\r\n                    </mat-expansion-panel-header>\r\n                    <mat-tab-group>\r\n                        <mat-tab label=\"Students\"> \r\n                            <app-students-data-table [displayedColumns]=\"studentDisplayColumns\"></app-students-data-table>     \r\n                        </mat-tab>\r\n                        <mat-tab label=\"Lecturers\"> \r\n                            <app-lecturers-data-table [displayedColumns]=\"lecturerDispalyColumns\"></app-lecturers-data-table>    \r\n                        </mat-tab>\r\n                    </mat-tab-group>\r\n                </mat-expansion-panel>\r\n            </mat-accordion>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>","import { Component, Inject, OnInit, Optional } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { BehaviorSubject, Observable, Subject, Subscription } from 'rxjs';\r\nimport { SAVE_BTN_LABEL, UPDATE_BTN_LABEL } from 'src/app/common/Constants';\r\nimport { Lecturer } from 'src/app/models/lecturer';\r\nimport { College } from 'src/app/models/college';\r\nimport { CollegeService } from 'src/app/services/functional/college.service';\r\nimport { UiCommonService } from 'src/app/services/ui-common.service';\r\nimport { LecturerService } from 'src/app/services/functional/lecturer.service';\r\n\r\n@Component({\r\n  selector: 'app-create-update-dailog-box',\r\n  templateUrl: './create-update-dailog-box.component.html',\r\n  styleUrls: ['./create-update-dailog-box.component.scss']\r\n})\r\nexport class CollegeCreateUpdateDailogBoxComponent implements OnInit {\r\n\r\n  collegeForm: FormGroup;\r\n  lecturerDropdownValues: Lecturer[];\r\n  collegeDropdownValues: College[];\r\n  subscriptions: Subscription;\r\n  disableSave$: Observable<boolean>;\r\n  action: string;\r\n  title: string;\r\n  submitBtnLabel: string;\r\n  selectedCollege: College;\r\n  private disableFieldsExceptCollege: Subject<boolean>;\r\n  disableFieldsExceptCollege$: Observable<boolean>;\r\n\r\n  constructor(private collegeService: CollegeService,\r\n    private lecturerService: LecturerService,\r\n    private formBuilder: FormBuilder,\r\n    private uiCommonService: UiCommonService,\r\n    public dialogRef: MatDialogRef<CollegeCreateUpdateDailogBoxComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: { action: string }) {\r\n    this.subscriptions = new Subscription();\r\n\r\n    this.collegeForm = this.formBuilder.group({\r\n      collegeId: [],\r\n      name: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      state: ['', Validators.required],\r\n      principalId: []\r\n    });\r\n\r\n    this.disableFieldsExceptCollege = new Subject<boolean>();\r\n    this.disableFieldsExceptCollege$ = this.disableFieldsExceptCollege.asObservable();\r\n\r\n    this.subscriptions.add(\r\n      this.disableFieldsExceptCollege$.subscribe(disable => {\r\n        if(disable) {\r\n          this.collegeForm.get('name').disable();\r\n          this.collegeForm.get('city').disable();\r\n          this.collegeForm.get('state').disable();\r\n          this.collegeForm.get('principalId').disable();\r\n        } else {\r\n          this.collegeForm.get('name').enable();\r\n          this.collegeForm.get('city').enable();\r\n          this.collegeForm.get('state').enable();\r\n          this.collegeForm.get('principalId').enable();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.dialogRef.updateSize(\"27%\");\r\n    this.action = this.data.action.toLowerCase();\r\n    if (this.action === \"save\") {\r\n      this.title = \"Add College\";\r\n      this.submitBtnLabel = SAVE_BTN_LABEL;\r\n      this.disableFieldsExceptCollege.next(false);\r\n    } else if (this.action === \"update\") {\r\n      this.title = \"Update College\";\r\n      this.submitBtnLabel = UPDATE_BTN_LABEL;\r\n      this.disableFieldsExceptCollege.next(true);\r\n    }\r\n\r\n    this.disableSave$ = this.collegeService.isCollegeFormSubmitDisabled.asObservable();\r\n\r\n    this.subscriptions.add(\r\n      this.collegeService.collegesData$.subscribe(data => this.collegeDropdownValues = data)\r\n    );\r\n  }\r\n\r\n  updateOtherFieldValues() {\r\n    this.disableFieldsExceptCollege.next(false);\r\n    this.selectedCollege = this.collegeDropdownValues.find(college => college.id == this.collegeForm.get('collegeId').value);\r\n    this.collegeForm.get('name').setValue(this.selectedCollege.name);\r\n    this.collegeForm.get('city').setValue(this.selectedCollege.location.split(',')[0]);\r\n    this.collegeForm.get('state').setValue(this.selectedCollege.location.split(',')[1]);\r\n    this.subscriptions.add(\r\n      this.lecturerService.lecturersData$.subscribe(data => this.lecturerDropdownValues = data.filter(lecturer => lecturer.collegeId == this.selectedCollege.id))\r\n    );\r\n    this.collegeForm.get('principalId').setValue(this.selectedCollege.principalId);\r\n  }\r\n\r\n  onSubmit() {\r\n    let college = {\r\n      location: this.collegeForm.get('city').value + ',' + this.collegeForm.get('state').value,\r\n      name: this.collegeForm.get('name').value,\r\n      principalId: this.collegeForm.get('principalId')?.value\r\n    } as College;\r\n\r\n    if (this.data.action.toLowerCase() === \"save\") this.collegeService.addCollege(college);\r\n    else if (this.data.action.toLowerCase() === \"update\") {\r\n      college.id = this.selectedCollege.id;\r\n      this.collegeService.updateCollegeDetails(this.selectedCollege.id, college);\r\n    }\r\n    this.dialogRef.close();\r\n    this.uiCommonService.load.next(true);\r\n  }\r\n\r\n}\r\n","<div>\r\n    <h2 mat-dialog-title>{{ title }}</h2>\r\n    <div class=\"content\">\r\n        <form [formGroup]=\"collegeForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n            <div *ngIf=\"action === 'update'\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>College</mat-label>\r\n                    <mat-select formControlName=\"collegeId\" (selectionChange)=\"updateOtherFieldValues()\">\r\n                        <mat-option *ngFor=\"let college of collegeDropdownValues\" [value]=\"college.id\">\r\n                            {{ college.name }}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div>\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Name</mat-label>\r\n                    <input matInput formControlName=\"name\" required>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>City / District</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"city\" required>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div>\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>State</mat-label>\r\n                    <input matInput formControlName=\"state\" required>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div *ngIf=\"action === 'update'\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Principal</mat-label>\r\n                    <mat-select formControlName=\"principalId\">\r\n                        <mat-option *ngFor=\"let lecturer of lecturerDropdownValues\" [value]=\"lecturer.id\">\r\n                            {{lecturer.firstName + ' ' + lecturer.lastName}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div mat-dialog-actions align=\"center\">\r\n                <button type=\"button\" mat-raised-button mat-dialog-close>Cancel</button>\r\n                <button type=\"submit\" mat-raised-button [disabled]=\"(disableSave$ | async) || !collegeForm.valid\">{{ submitBtnLabel }}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit, Optional } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-prompt-dailog',\r\n  templateUrl: './delete-prompt-dailog.component.html',\r\n  styleUrls: ['./delete-prompt-dailog.component.scss']\r\n})\r\nexport class DeletePromptDailogComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<DeletePromptDailogComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: { caller: string }) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onAction(event: string) {\r\n    this.dialogRef.close({ event: event });\r\n  }\r\n\r\n}\r\n","<div>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <h3>Are you sure?</h3>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n        <button mat-button mat-dialog-close (click)=\"onAction('No')\">No</button>\r\n        <button mat-button (click)=\"onAction('Yes')\">Yes</button>\r\n    </mat-dialog-actions>\r\n</div>","import { Component, Inject, OnInit, Optional } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { LECTURER_CREATE_FORM_HEADER, LECTURER_UPDATE_FORM_HEADER, SAVE_BTN_LABEL, UPDATE_BTN_LABEL } from 'src/app/common/Constants';\r\nimport { Lecturer } from 'src/app/models/lecturer';\r\nimport { Stream } from 'src/app/models/stream';\r\nimport { CollegeService } from 'src/app/services/functional/college.service';\r\nimport { LecturerService } from 'src/app/services/functional/lecturer.service';\r\nimport { StreamService } from 'src/app/services/functional/stream.service';\r\nimport { UiCommonService } from 'src/app/services/ui-common.service';\r\n\r\n@Component({\r\n  selector: 'app-lecturer-create-update-dailog-box',\r\n  templateUrl: './create-update-dailog-box.component.html',\r\n  styleUrls: ['./create-update-dailog-box.component.scss']\r\n})\r\nexport class LecturerCreateUpdateDailogBoxComponent implements OnInit {\r\n\r\n  lecturerForm: FormGroup;\r\n  streamDropdownValues: Stream[];\r\n  subscriptions: Subscription;\r\n  disableSave$: Observable<boolean>;\r\n  action: string;\r\n  title: string;\r\n  submitBtnLabel: string;\r\n\r\n  constructor(private lecturerService: LecturerService,\r\n    private streamService: StreamService,\r\n    private collegeService: CollegeService,\r\n    private formBuilder: FormBuilder,\r\n    private uiCommonService: UiCommonService,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: { action: string, lecturer: Lecturer },\r\n    public dialogRef: MatDialogRef<LecturerCreateUpdateDailogBoxComponent>) {\r\n    this.streamDropdownValues = new Array<Stream>();\r\n    this.subscriptions = new Subscription();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dialogRef.updateSize(\"27%\");\r\n    this.action = this.data.action.toLowerCase();\r\n\r\n    this.lecturerForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      stream: ['', Validators.required]\r\n    });\r\n\r\n    if (this.action === \"save\") {\r\n      this.title = LECTURER_CREATE_FORM_HEADER;\r\n      this.submitBtnLabel = SAVE_BTN_LABEL;\r\n    } else if (this.action === \"update\") {\r\n      this.title = LECTURER_UPDATE_FORM_HEADER;\r\n      this.submitBtnLabel = UPDATE_BTN_LABEL;\r\n      this.lecturerForm.get('firstName').setValue(this.data.lecturer.firstName);\r\n      this.lecturerForm.get('lastName').setValue(this.data.lecturer.lastName);\r\n      this.lecturerForm.get('stream').setValue(this.data.lecturer.streamId);\r\n    }\r\n\r\n    this.disableSave$ = this.lecturerService.isLecturerFormSubmitDisabled.asObservable();\r\n\r\n    this.subscriptions.add(\r\n      this.streamService.streamsData$.subscribe(data => {\r\n        this.streamDropdownValues = data;\r\n      })\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    let lecturer = {\r\n      firstName: this.lecturerForm.get('firstName').value,\r\n      lastName: this.lecturerForm.get('lastName').value,\r\n      collegeId: this.collegeService.currentActiveClgId,\r\n      streamId: this.lecturerForm.get('stream').value,\r\n    } as Lecturer;\r\n    if (this.data.action.toLowerCase() === \"save\") this.lecturerService.addLecturer(lecturer);\r\n    else if (this.data.action.toLowerCase() === \"update\") {\r\n      lecturer.id = this.data.lecturer.id;\r\n      this.lecturerService.updateLecturerDetails(this.data.lecturer.id, lecturer);\r\n    }\r\n    this.dialogRef.close();\r\n    this.uiCommonService.load.next(true);\r\n  }\r\n\r\n}\r\n","<div>\r\n    <h2 mat-dialog-title>{{ title }}</h2>\r\n    <div>\r\n        <form [formGroup]=\"lecturerForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div>\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>First Name</mat-label>\r\n                    <input matInput formControlName=\"firstName\" required>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Last Name</mat-label>\r\n                    <input matInput formControlName=\"lastName\" required>\r\n                </mat-form-field>\r\n            </div>\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Stream</mat-label>\r\n                <mat-select formControlName=\"stream\" required>\r\n                    <mat-option *ngFor=\"let stream of streamDropdownValues\" [value]=\"stream.id\">{{stream.name}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <div mat-dialog-actions align=\"center\">\r\n                <button type=\"button\" mat-raised-button mat-dialog-close>Cancel</button>\r\n                <button type=\"submit\" mat-raised-button [disabled]=\"(disableSave$ | async) || !lecturerForm.valid\">{{ submitBtnLabel }}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { Lecturer } from 'src/app/models/lecturer';\r\nimport { Stream } from 'src/app/models/stream';\r\nimport { LecturerService } from 'src/app/services/functional/lecturer.service';\r\nimport { StreamService } from 'src/app/services/functional/stream.service';\r\nimport { UiCommonService } from 'src/app/services/ui-common.service';\r\nimport { DeletePromptDailogComponent } from '../delete-prompt-dailog/delete-prompt-dailog.component';\r\nimport { LecturerCreateUpdateDailogBoxComponent } from './create-update-dailog-box/create-update-dailog-box.component';\r\n\r\n@Component({\r\n  selector: 'app-lecturers-data-table',\r\n  templateUrl: './lecturers-data-table.component.html',\r\n  styleUrls: ['./lecturers-data-table.component.scss']\r\n})\r\nexport class LecturersDataTableComponent implements OnInit, AfterViewInit {\r\n\r\n  @Input() displayedColumns: string[];\r\n\r\n  dataSource: MatTableDataSource<Lecturer>;\r\n  subcriptions: Subscription;\r\n  streamsData: Stream[];\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  loadTable$: Observable<boolean>; \r\n\r\n  constructor(private lecturerService: LecturerService,\r\n    private streamService: StreamService,\r\n    private uiCommonService: UiCommonService,\r\n    public dialog: MatDialog) {\r\n    this.dataSource = new MatTableDataSource<Lecturer>();\r\n    this.subcriptions = new Subscription();\r\n    this.streamsData = new Array<Stream>();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadTable$ = this.uiCommonService.load$;\r\n\r\n    this.subcriptions.add(\r\n      this.streamService.streamsData$.subscribe(data => this.streamsData = data)\r\n    );\r\n\r\n    this.subcriptions.add(\r\n      this.lecturerService.latestFiltredLecturerData.subscribe(data => this.dataSource.data = data)\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getStream(id: number): Stream {\r\n    return this.streamsData.find(stream => stream.id === id);\r\n  }\r\n\r\n  openDialog() {\r\n    const dialogRef = this.dialog.open(LecturerCreateUpdateDailogBoxComponent);\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n\r\n  onDeleteClick(lecturer: Lecturer) {\r\n    this.openDeletePromptDailog(lecturer);\r\n  }\r\n\r\n  onUpdateClick(lecturer: Lecturer) {\r\n    this.openCreateOrUpdateDialog(\"update\", lecturer);\r\n  }\r\n\r\n  onCreateClick() {\r\n    this.openCreateOrUpdateDialog(\"save\");\r\n  }\r\n\r\n  private openCreateOrUpdateDialog(action: string, lecturer?: Lecturer) {\r\n    const dialogRef = this.dialog.open(LecturerCreateUpdateDailogBoxComponent, {\r\n      data: { action: action, lecturer: lecturer },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n\r\n  private openDeletePromptDailog(lecturer: Lecturer) {\r\n    const dialogRef = this.dialog.open(DeletePromptDailogComponent, {\r\n      width: \"32em\",\r\n      data: { caller: \"lecturer-table\" },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result?.event.toLowerCase() === \"yes\") {\r\n        this.uiCommonService.load.next(true);\r\n        this.lecturerService.removeLecturer(lecturer.id);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"demo-button-container\">\r\n  <button mat-raised-button class=\"demo-button\" (click)=\"onCreateClick()\">\r\n    Add Lecturer\r\n  </button>\r\n</div>\r\n<div class=\"loading-shade\" *ngIf=\"loadTable$ | async\">\r\n  <mat-spinner></mat-spinner>\r\n</div>\r\n<div class=\"mat-elevation-z8\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <ng-container matColumnDef=\"Id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"firstName\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> First Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.firstName}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"lastName\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Last Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.lastName}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"stream\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Stream </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{getStream(element.streamId).name}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"actions\">\r\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <button mat-icon-button title=\"Update\" (click)=\"onUpdateClick(element)\">\r\n          <mat-icon>update</mat-icon>\r\n        </button>\r\n        <button mat-icon-button title=\"Delete\" (click)=\"onDeleteClick(element)\">\r\n          <mat-icon>delete</mat-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n  </table>\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>","import { Component, Inject, OnInit, Optional } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { SAVE_BTN_LABEL, STUDENT_CREATE_FORM_HEADER, STUDENT_UPDATE_FORM_HEADER, UPDATE_BTN_LABEL } from 'src/app/common/Constants';\r\nimport { Stream } from 'src/app/models/stream';\r\nimport { Student } from 'src/app/models/student';\r\nimport { CollegeService } from 'src/app/services/functional/college.service';\r\nimport { StreamService } from 'src/app/services/functional/stream.service';\r\nimport { StudentService } from 'src/app/services/functional/student.service';\r\nimport { UiCommonService } from 'src/app/services/ui-common.service';\r\n\r\n@Component({\r\n  selector: 'app-student-create-update-dailog-box',\r\n  templateUrl: './create-update-dailog-box.component.html',\r\n  styleUrls: ['./create-update-dailog-box.component.scss']\r\n})\r\nexport class StudentCreateUpdateDailogBoxComponent implements OnInit {\r\n\r\n  studentForm: FormGroup;\r\n  streamDropdownValues: Stream[];\r\n  currentStreamYearDropdownValues: number[];\r\n  subscriptions: Subscription;\r\n  disableSave$: Observable<boolean>;\r\n  action: string;\r\n  title: string;\r\n  submitBtnLabel: string;\r\n\r\n  constructor(private studentervice: StudentService,\r\n    private streamService: StreamService,\r\n    private collegeService: CollegeService,\r\n    private formBuilder: FormBuilder,\r\n    private uiCommonService: UiCommonService,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: { action: string, student: Student },\r\n    public dialogRef: MatDialogRef<StudentCreateUpdateDailogBoxComponent>) {\r\n    this.streamDropdownValues = new Array<Stream>();\r\n    this.currentStreamYearDropdownValues = new Array<number>();\r\n    this.subscriptions = new Subscription();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dialogRef.updateSize(\"27%\");\r\n    this.action = this.data.action.toLowerCase();\r\n\r\n    this.studentForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      stream: ['', Validators.required],\r\n      currentYear: ['', Validators.required]\r\n    });\r\n\r\n    if (this.action === \"save\") {\r\n      this.title = STUDENT_CREATE_FORM_HEADER;\r\n      this.submitBtnLabel = SAVE_BTN_LABEL;\r\n    } else if (this.action === \"update\") {\r\n      this.title = STUDENT_UPDATE_FORM_HEADER;\r\n      this.submitBtnLabel = UPDATE_BTN_LABEL;\r\n      this.studentForm.get('firstName').setValue(this.data.student.firstName);\r\n      this.studentForm.get('lastName').setValue(this.data.student.lastName);\r\n      this.studentForm.get('stream').setValue(this.data.student.streamId);\r\n      this.studentForm.get('currentYear').setValue(this.data.student.currStreamYear);\r\n    }\r\n\r\n    this.disableSave$ = this.studentervice.isStudentFormSubmitDisabled.asObservable();\r\n\r\n    this.subscriptions.add(\r\n      this.streamService.streamsData$.subscribe(data => {\r\n        this.streamDropdownValues = data;\r\n        this.currentStreamYearDropdownValues = [...Array.from({ length: Math.max(...data.map(obj => obj.noOfYears)) }, (_, i) => i + 1)];\r\n      })\r\n    );\r\n  }\r\n\r\n  updateCurrentYearDropdown() {\r\n    let maxYears = this.streamDropdownValues.find(stream => stream.id === this.studentForm.get(\"stream\").value).noOfYears;\r\n    this.currentStreamYearDropdownValues = [...Array.from({ length: maxYears }, (_, i) => i + 1)];\r\n  }\r\n\r\n  onSubmit() {\r\n    let student = {\r\n      firstName: this.studentForm.get('firstName').value,\r\n      lastName: this.studentForm.get('lastName').value,\r\n      collegeId: this.collegeService.currentActiveClgId,\r\n      streamId: this.studentForm.get('stream').value,\r\n      currStreamYear: this.studentForm.get('currentYear').value\r\n    } as Student;\r\n\r\n    if (this.data.action.toLowerCase() === \"save\") this.studentervice.addStudent(student);\r\n    else if (this.data.action.toLowerCase() === \"update\") {\r\n      student.id = this.data.student.id;\r\n      this.studentervice.updateStudentDetails(this.data.student.id, student);\r\n    }\r\n    this.dialogRef.close();\r\n    this.uiCommonService.load.next(true);\r\n  }\r\n}","<div>\r\n    <h2 mat-dialog-title>{{ title }}</h2>\r\n    <div class=\"content\">\r\n        <form [formGroup]=\"studentForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div>\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>First Name</mat-label>\r\n                    <input matInput formControlName=\"firstName\" required>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Last Name</mat-label>\r\n                    <input matInput formControlName=\"lastName\" required>\r\n                </mat-form-field>\r\n            </div>\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Stream</mat-label>\r\n                <mat-select formControlName=\"stream\" (selectionChange)=\"updateCurrentYearDropdown()\" required>\r\n                    <mat-option *ngFor=\"let stream of streamDropdownValues\" [value]=\"stream.id\">{{stream.name}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Current Year</mat-label>\r\n                <mat-select formControlName=\"currentYear\" required>\r\n                    <mat-option *ngFor=\"let year of currentStreamYearDropdownValues\" [value]=\"year\">{{year}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <div mat-dialog-actions align=\"center\">\r\n                <button type=\"button\" mat-raised-button mat-dialog-close>Cancel</button>\r\n                <button type=\"submit\" mat-raised-button [disabled]=\"(disableSave$ | async) || !studentForm.valid\">{{ submitBtnLabel }}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { Stream } from 'src/app/models/stream';\r\nimport { Student } from 'src/app/models/student';\r\nimport { StreamService } from 'src/app/services/functional/stream.service';\r\nimport { StudentService } from 'src/app/services/functional/student.service';\r\nimport { UiCommonService } from 'src/app/services/ui-common.service';\r\nimport { DeletePromptDailogComponent } from '../delete-prompt-dailog/delete-prompt-dailog.component';\r\nimport { StudentCreateUpdateDailogBoxComponent } from './create-update-dailog-box/create-update-dailog-box.component';\r\n\r\n@Component({\r\n  selector: 'app-students-data-table',\r\n  templateUrl: './students-data-table.component.html',\r\n  styleUrls: ['./students-data-table.component.scss']\r\n})\r\nexport class StudentsDataTableComponent implements OnInit, AfterViewInit {\r\n\r\n  @Input() displayedColumns: string[];\r\n  @Input() data: Student[];\r\n\r\n  dataSource: MatTableDataSource<Student>;\r\n\r\n  streamsData: Stream[];\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  subscriptions: Subscription;\r\n\r\n  loadTable$: Observable<boolean>; \r\n\r\n  constructor(private streamService: StreamService, \r\n    private studentService: StudentService, \r\n    private uiCommonService: UiCommonService,\r\n    public dialog: MatDialog) {\r\n    this.dataSource = new MatTableDataSource<Student>();\r\n    this.streamsData = new Array<Stream>();\r\n    this.subscriptions = new Subscription();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadTable$ = this.uiCommonService.load$;\r\n\r\n    this.subscriptions.add(\r\n      this.streamService.streamsData$.subscribe(data => this.streamsData = data)\r\n    );\r\n\r\n    this.subscriptions.add(\r\n      this.studentService.latestFilteredStudentData.asObservable().subscribe(data => {\r\n        this.dataSource.data = data;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getStream(id: number): Stream {\r\n    return this.streamsData.find(stream => stream.id === id);\r\n  }\r\n\r\n  onDeleteClick(student: Student) {\r\n    this.openDeletePromptDailog(student);\r\n  }\r\n\r\n  onUpdateClick(student: Student) {\r\n    this.openCreateOrUpdateDialog(\"update\", student);\r\n  }\r\n\r\n  onCreateClick() {\r\n    this.openCreateOrUpdateDialog(\"save\");\r\n  }\r\n\r\n  private openCreateOrUpdateDialog(action: string, student?: Student) {\r\n    const dialogRef = this.dialog.open(StudentCreateUpdateDailogBoxComponent, {\r\n      data: { action: action, student: student },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n\r\n  private openDeletePromptDailog(student: Student) {\r\n    const dialogRef = this.dialog.open(DeletePromptDailogComponent, {\r\n      data: { caller: \"student-table\" },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result?.event.toLowerCase() === \"yes\") {\r\n        this.uiCommonService.load.next(true);\r\n        this.studentService.removeStudent(student.id);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"demo-button-container\">\r\n  <button mat-raised-button class=\"demo-button\" (click)=\"onCreateClick()\">\r\n    Add Student\r\n  </button>\r\n</div>\r\n<div class=\"loading-shade\" *ngIf=\"loadTable$ | async\">\r\n  <mat-spinner></mat-spinner>\r\n</div>\r\n<div class=\"mat-elevation-z8\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <ng-container matColumnDef=\"Id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"firstName\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> First Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.firstName}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"lastName\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Last Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.lastName}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"stream\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Stream </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{getStream(element.streamId).name}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"maxYearsInStream\" mat-sort-header>\r\n      <th mat-header-cell *matHeaderCellDef> Course Duration(Year) </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{ getStream(element.streamId).noOfYears }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"currentYear\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Current Year </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{ element.currStreamYear }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"actions\">\r\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <button mat-icon-button title=\"Update\" (click)=\"onUpdateClick(element)\">\r\n          <mat-icon>update</mat-icon>\r\n        </button>\r\n        <button mat-icon-button title=\"Delete\" (click)=\"onDeleteClick(element)\">\r\n          <mat-icon>delete</mat-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n  </table>\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError, filter, retry } from 'rxjs/operators';\r\nimport { FrequentHttpHeaders } from \"../common/HttpHeaders\";\r\n\r\n@Injectable()\r\nexport class MyInterceptor implements HttpInterceptor {\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        // Attach headers to every request\r\n        const reqClone = req.clone({\r\n            setHeaders: FrequentHttpHeaders\r\n        });\r\n\r\n        return next.handle(reqClone).pipe(\r\n\r\n            // Retry calling the http method one more time on failure\r\n            retry(1),\r\n\r\n            // Check if the request is related to college, so that we want to modify only the response from collge API'S \r\n            // filter(event => event instanceof HttpResponse && reqClone.url.includes('college')),\r\n\r\n            // tap((response: HttpResponse<any>) => console.log(\"Reponse - \", response.body)),\r\n\r\n            // Handle Error\r\n            catchError((error: HttpErrorResponse) => {\r\n                alert(`You got error with ${reqClone.url}`);\r\n                return throwError(error);\r\n            })\r\n        );\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { InMemoryDbService, RequestInfo } from 'angular-in-memory-web-api';\r\nimport { Observable } from 'rxjs';\r\nimport { COLLEGE_DATA } from 'src/app/common/helpers/college.data';\r\nimport { LECTURER_DATA } from 'src/app/common/helpers/lecturer.data';\r\nimport { STREAM_DATA } from 'src/app/common/helpers/stream.data';\r\nimport { STUDENT_DATA } from 'src/app/common/helpers/student.data';\r\nimport { College } from 'src/app/models/college';\r\nimport { Lecturer } from 'src/app/models/lecturer';\r\nimport { Stream } from 'src/app/models/stream';\r\nimport { Student } from 'src/app/models/student';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InMemoryDataService implements InMemoryDbService {\r\n\r\n  constructor() { }\r\n\r\n  createDb(reqInfo?: RequestInfo): {} | Observable<{}> | Promise<{}> {\r\n    return {\r\n      stream: STREAM_DATA,\r\n      student: STUDENT_DATA,\r\n      lecturer: LECTURER_DATA,\r\n      college: COLLEGE_DATA\r\n    };\r\n  }\r\n\r\n  genId<T extends College | Student | Stream | Lecturer>(data: T[]): number {\r\n    return data.length > 0 ? Math.max(...data.map(t => t.id)) + 1 : 1;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject, combineLatest, Observable, Subject, Subscription } from 'rxjs';\r\nimport { COLLEGE_LOADING_MESSAGE, ERROR_MESSAGE } from 'src/app/common/Constants';\r\nimport { College } from 'src/app/models/college';\r\nimport { UiCommonService } from '../ui-common.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CollegeService implements OnDestroy {\r\n\r\n  private requestUrl: string;\r\n\r\n  collegesData: BehaviorSubject<Array<College>>;\r\n  collegesData$: Observable<Array<College>>;\r\n\r\n  latestOpenedPanelId: Subject<number>;\r\n  latestClosedPanelId: Subject<number>;\r\n\r\n  private latestFilteredCollegesData: Subject<Array<College>>;\r\n  latestFilteredCollegesData$: Observable<Array<College>>;\r\n\r\n  isCollegeFormSubmitDisabled: BehaviorSubject<boolean>;\r\n\r\n  currentActiveClgId: number;\r\n\r\n  refreshCollegeData: Subject<boolean>;\r\n\r\n  private subscriptions: Subscription;\r\n\r\n  constructor(private _http: HttpClient,\r\n    private uiCommonService: UiCommonService) {\r\n    this.requestUrl = \"api/college/\";\r\n    this.collegesData = new BehaviorSubject<Array<College>>([]);\r\n    this.collegesData$ = this.collegesData.asObservable();\r\n    this.latestClosedPanelId = new Subject<number>();\r\n    this.latestOpenedPanelId = new Subject<number>();\r\n\r\n    this.subscriptions = new Subscription();\r\n    this.latestFilteredCollegesData = new Subject<Array<College>>();\r\n    this.latestFilteredCollegesData$ = this.latestFilteredCollegesData.asObservable();\r\n    this.isCollegeFormSubmitDisabled = new BehaviorSubject<boolean>(false);\r\n\r\n    this.refreshCollegeData = new Subject<boolean>();\r\n\r\n    this.subscriptions.add(\r\n      this.latestOpenedPanelId.asObservable().subscribe(collegeId => this.currentActiveClgId = collegeId)\r\n    );\r\n\r\n    this.filterCollegeData();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n    this.collegesData.complete();\r\n  }\r\n\r\n  addCollege(college: College) {\r\n    let response$ = this._http.post<College>(this.requestUrl, college);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => {\r\n        this.isCollegeFormSubmitDisabled.next(false);\r\n        data ? this.getAllCollegesDetails() : null;\r\n      }, error => this.uiCommonService.loadingMessage.next(ERROR_MESSAGE))\r\n    );\r\n  }\r\n\r\n  getAllCollegesDetails() {\r\n    this.uiCommonService.loadingMessage.next(COLLEGE_LOADING_MESSAGE);\r\n    let response$ = this._http.get<Array<College>>(this.requestUrl);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => {\r\n        this.collegesData.next(data);\r\n        this.uiCommonService.loadingMessage.next('');\r\n      }, error => this.uiCommonService.loadingMessage.next(ERROR_MESSAGE))\r\n    );\r\n  }\r\n\r\n  updateCollegeDetails(id: number, college: College) {\r\n    let response$ = this._http.put<College>(this.requestUrl + id, college);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => {\r\n        this.isCollegeFormSubmitDisabled.next(false);\r\n        this.getAllCollegesDetails();\r\n      }, error => this.uiCommonService.loadingMessage.next(ERROR_MESSAGE))\r\n    );\r\n  }\r\n\r\n  removeCollege(id: number) {\r\n    let response$ = this._http.delete<College>(this.requestUrl + id);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => data ? this.getAllCollegesDetails() : null, error => this.uiCommonService.loadingMessage.next(ERROR_MESSAGE))\r\n    );\r\n  }\r\n\r\n  filterCollegeData() {\r\n    this.subscriptions.add(\r\n      this.collegesData$.subscribe(data => {\r\n        this.latestFilteredCollegesData.next(data);\r\n        this.uiCommonService.load.next(false);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, combineLatest, Observable, Subject, Subscription } from 'rxjs';\r\nimport { ERROR_MESSAGE } from 'src/app/common/Constants';\r\nimport { Lecturer } from 'src/app/models/lecturer';\r\nimport { UiCommonService } from '../ui-common.service';\r\nimport { CollegeService } from './college.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LecturerService {\r\n\r\n  private requestUrl: string;\r\n\r\n  lecturersData: BehaviorSubject<Array<Lecturer>>;\r\n  lecturersData$: Observable<Array<Lecturer>>;\r\n\r\n  latestFiltredLecturerData: Subject<Array<Lecturer>>;\r\n  isLecturerFormSubmitDisabled: BehaviorSubject<boolean>;\r\n\r\n  private subscriptions: Subscription;\r\n\r\n  constructor(private _http: HttpClient, \r\n    private collegeService: CollegeService,\r\n    private uiCommonService: UiCommonService) {\r\n    this.requestUrl = \"api/lecturer/\";\r\n    this.lecturersData = new BehaviorSubject<Array<Lecturer>>([]);\r\n    this.lecturersData$ = this.lecturersData.asObservable();\r\n    this.latestFiltredLecturerData = new Subject<Array<Lecturer>>();\r\n    this.subscriptions = new Subscription();\r\n    this.isLecturerFormSubmitDisabled = new BehaviorSubject<boolean>(false);\r\n    this.filterLecturerData();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n    this.lecturersData.complete();\r\n  }\r\n\r\n  addLecturer(lecturer: Lecturer) {\r\n    this.isLecturerFormSubmitDisabled.next(true);\r\n    let response$ = this._http.post<Lecturer>(this.requestUrl, lecturer);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => {\r\n        this.isLecturerFormSubmitDisabled.next(false);\r\n        data ? this.getAllLecturerDetails() : null\r\n      }, error => this.uiCommonService.loadingMessage.next(ERROR_MESSAGE))\r\n    );\r\n  }\r\n\r\n  getAllLecturerDetails() {\r\n    let response$ = this._http.get<Array<Lecturer>>(this.requestUrl);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => this.lecturersData.next(data), error => this.uiCommonService.loadingMessage.next(ERROR_MESSAGE))\r\n    );\r\n  }\r\n\r\n  updateLecturerDetails(id: number, lecturer: Lecturer) {\r\n    this.isLecturerFormSubmitDisabled.next(true);\r\n    let response$ = this._http.put<Lecturer>(this.requestUrl + id, lecturer);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => {\r\n        this.isLecturerFormSubmitDisabled.next(false);\r\n        this.getAllLecturerDetails();\r\n      }, error => this.uiCommonService.loadingMessage.next(ERROR_MESSAGE))\r\n    );\r\n  }\r\n\r\n  removeLecturer(id: number) {\r\n    let response$ = this._http.delete<Lecturer>(this.requestUrl + id);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => this.getAllLecturerDetails(), error => this.uiCommonService.loadingMessage.next(ERROR_MESSAGE))\r\n    );\r\n  }\r\n\r\n  filterLecturerData() {\r\n    this.subscriptions.add(\r\n      combineLatest(\r\n        this.collegeService.latestOpenedPanelId.asObservable(),\r\n        this.lecturersData$,\r\n        (collegeId, lecturers) => {\r\n          this.latestFiltredLecturerData.next(lecturers.filter(obj => obj.collegeId == collegeId));\r\n          this.uiCommonService.load.next(false);\r\n        }\r\n      ).subscribe()\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { Stream } from 'src/app/models/stream';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StreamService implements OnDestroy {\r\n\r\n  private requestUrl: string;\r\n\r\n  streamsData: BehaviorSubject<Array<Stream>>;\r\n  streamsData$: Observable<Array<Stream>>;\r\n\r\n  subscriptions: Subscription;\r\n\r\n  constructor(private _http: HttpClient) {\r\n    this.requestUrl = \"api/stream/\";\r\n    this.streamsData = new BehaviorSubject<Array<Stream>>([]);\r\n    this.streamsData$ = this.streamsData.asObservable();\r\n\r\n    this.subscriptions = new Subscription();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n    this.streamsData.complete();\r\n  }\r\n\r\n  addStream(stream: Stream) {\r\n    let response$ = this._http.post<Stream>(this.requestUrl, stream);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => data ? this.getAllStreamsDetails() : null, error => console.log(error))\r\n    );\r\n  }\r\n\r\n  getAllStreamsDetails(caller?: string) {\r\n    let response$ = this._http.get<Array<Stream>>(this.requestUrl);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => this.streamsData.next(data), error => console.log(error))\r\n    );\r\n  }\r\n\r\n  updateStreamDetails(id: number, stream: Stream) {\r\n    let response$ = this._http.put<Stream>(this.requestUrl + id, stream);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => data ? this.getAllStreamsDetails() : null, error => console.log(error))\r\n    );\r\n  }\r\n\r\n  removeStream(id: number) {\r\n    let response$ = this._http.delete<Stream>(this.requestUrl + id);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => data ? this.getAllStreamsDetails() : null, error => console.log(error))\r\n    );\r\n  }\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject, combineLatest, Observable, Subject, Subscription } from 'rxjs';\r\nimport { ERROR_MESSAGE } from 'src/app/common/Constants';\r\nimport { Student } from 'src/app/models/student';\r\nimport { UiCommonService } from '../ui-common.service';\r\nimport { CollegeService } from './college.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StudentService implements OnDestroy {\r\n\r\n  private requestUrl: string;\r\n\r\n  studentsData: BehaviorSubject<Array<Student>>;\r\n  studentsData$: Observable<Array<Student>>;\r\n\r\n  latestFilteredStudentData: Subject<Array<Student>>;\r\n  isStudentFormSubmitDisabled: BehaviorSubject<boolean>;\r\n\r\n  private subscriptions: Subscription;\r\n\r\n  constructor(private _http: HttpClient,\r\n    private collegeService: CollegeService,\r\n    private uiCommonService: UiCommonService) {\r\n    this.requestUrl = \"api/student/\";\r\n    this.studentsData = new BehaviorSubject<Array<Student>>([]);\r\n    this.studentsData$ = this.studentsData.asObservable();\r\n    this.latestFilteredStudentData = new Subject<Array<Student>>();\r\n    this.isStudentFormSubmitDisabled = new BehaviorSubject<boolean>(false);\r\n    this.subscriptions = new Subscription();\r\n    this.filterStudentData();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n    this.studentsData.complete();\r\n  }\r\n\r\n  addStudent(student: Student) {\r\n    this.isStudentFormSubmitDisabled.next(true);\r\n    let response$ = this._http.post<Student>(this.requestUrl, student);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => {\r\n        this.isStudentFormSubmitDisabled.next(false);\r\n        data ? this.getAllStudentsDetails() : null;\r\n      }, error => this.uiCommonService.loadingMessage.next(ERROR_MESSAGE))\r\n    );\r\n  }\r\n\r\n  getAllStudentsDetails() {\r\n    let response$ = this._http.get<Array<Student>>(this.requestUrl);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => {\r\n        this.studentsData.next(data);\r\n      }, error => this.uiCommonService.loadingMessage.next(ERROR_MESSAGE))\r\n    );\r\n  }\r\n\r\n  updateStudentDetails(id: number, student: Student) {\r\n    this.isStudentFormSubmitDisabled.next(true);\r\n    let response$ = this._http.put<Student>(this.requestUrl + id, student);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => {\r\n        this.isStudentFormSubmitDisabled.next(false);\r\n        this.getAllStudentsDetails();\r\n      }, error => this.uiCommonService.loadingMessage.next(ERROR_MESSAGE))\r\n    );\r\n  }\r\n\r\n  removeStudent(id: number) {\r\n    let response$ = this._http.delete<Student>(this.requestUrl + id);\r\n\r\n    this.subscriptions.add(\r\n      response$.subscribe(data => this.getAllStudentsDetails(), error => this.uiCommonService.loadingMessage.next(ERROR_MESSAGE))\r\n    );\r\n  }\r\n\r\n  filterStudentData() {\r\n    this.subscriptions.add(\r\n      combineLatest(\r\n        this.collegeService.latestOpenedPanelId.asObservable(),\r\n        this.studentsData$,\r\n        (collegeId, students) => {\r\n          if(collegeId && students) {\r\n            this.latestFilteredStudentData.next(students.filter(obj => obj.collegeId == collegeId));\r\n            this.uiCommonService.load.next(false);\r\n          }\r\n        }\r\n      ).subscribe()\r\n    )\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UiCommonService {\r\n\r\n  load: BehaviorSubject<boolean>;\r\n  load$: Observable<boolean>;\r\n\r\n  loadingMessage: BehaviorSubject<string>;\r\n  loadingMessage$: Observable<string>;\r\n\r\n  constructor() {\r\n    this.load = new BehaviorSubject<boolean>(false);\r\n    this.load$ = this.load.asObservable();\r\n\r\n    this.loadingMessage = new BehaviorSubject<string>('');\r\n    this.loadingMessage$ = this.loadingMessage.asObservable();\r\n  }\r\n}\r\n","export const environment = {\r\n  production: true\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}